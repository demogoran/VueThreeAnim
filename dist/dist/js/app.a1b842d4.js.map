{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./App.vue?573c","webpack:///./libs/three.extensions.js","webpack:///./libs/orbit.controls.js","webpack:///./libs/root.js","webpack:///./libs/bas.js","webpack:///./js/animation.mesh.js","webpack:///./js/index.js","webpack:///./js/animation.options.js","webpack:///App.vue","webpack:///./App.vue?9f6e","webpack:///./App.vue","webpack:///./App.vue?3ab9"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","THREE","require","EffectComposer","renderer","renderTarget","undefined","parameters","minFilter","LinearFilter","magFilter","format","RGBAFormat","stencilBuffer","size","getSize","WebGLRenderTarget","width","height","renderTarget1","renderTarget2","clone","writeBuffer","readBuffer","passes","CopyShader","console","error","copyPass","ShaderPass","assign","swapBuffers","tmp","addPass","pass","setSize","insertPass","index","delta","maskActive","il","enabled","needsSwap","context","stencilFunc","NOTEQUAL","EQUAL","MaskPass","ClearMaskPass","reset","dispose","Pass","clear","renderToScreen","shader","textureID","ShaderMaterial","uniforms","material","UniformsUtils","defines","vertexShader","fragmentShader","camera","OrthographicCamera","scene","Scene","quad","Mesh","PlaneBufferGeometry","add","constructor","texture","RenderPass","overrideMaterial","clearColor","clearAlpha","oldClearColor","Color","oldClearAlpha","copy","getClearColor","getClearAlpha","setClearColor","inverse","writeValue","clearValue","state","buffers","color","setMask","depth","setLocked","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","KEEP","BloomPass","strength","kernelSize","sigma","resolution","pars","renderTargetX","renderTargetY","copyShader","copyUniforms","materialCopy","blending","AdditiveBlending","transparent","ConvolutionShader","convolutionShader","convolutionUniforms","blurX","buildKernel","materialConvolution","toFixed","disable","STENCIL_TEST","blurY","enable","Vector2","type","join","gauss","x","Math","exp","values","sum","halfWidth","kMaxKernelSize","ceil","Array","OrbitControls","domElement","document","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MIDDLE","target0","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","updateProjectionMatrix","dispatchEvent","changeEvent","update","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","max","min","makeSafe","radius","scale","panOffset","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY_PAN","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","body","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","warn","dollyIn","dollyScale","dollyOut","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","y","handleMouseMoveDolly","handleMouseMovePan","handleMouseUp","handleMouseWheel","handleKeyDown","keyCode","handleTouchStartRotate","touches","pageX","pageY","handleTouchStartDollyPan","dx","dy","sqrt","handleTouchMoveRotate","handleTouchMoveDollyPan","handleTouchEnd","preventDefault","button","ctrlKey","metaKey","shiftKey","addEventListener","stopPropagation","defineProperties","center","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","THREERoot","params","container","zNear","zFar","createCameraControls","autoStart","pixelRatio","devicePixelRatio","antialias","alpha","updateCallbacks","resizeCallbacks","objects","WebGLRenderer","setPixelRatio","appendChild","w","h","PerspectiveCamera","resize","setTimeout","tick","createOrbitControls","controls","addUpdateCallback","start","callback","addResizeCallback","addTo","parentKey","remove","parent","requestAnimationFrame","forEach","aspect","initPostProcessing","getPixelRatio","composer","renderPass","autoClear","BaseAnimationMaterial","uniformValues","setValues","merge","setUniformValues","map","normalMap","envMap","aoMap","specularMap","alphaMap","lightMap","emissiveMap","bumpMap","displacementMap","roughnessMap","metalnessMap","gradientMap","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","mapping","CubeReflectionMapping","CubeRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","combine","MixOperation","AddOperation","MultiplyOperation","BasicAnimationMaterial","varyingParameters","vertexParameters","vertexFunctions","vertexInit","vertexNormal","vertexPosition","vertexColor","vertexPostMorph","vertexPostSkinning","fragmentFunctions","fragmentParameters","fragmentInit","fragmentMap","fragmentDiffuse","ShaderLib","lights","concatVertexShader","concatFragmentShader","LambertAnimationMaterial","fragmentEmissive","fragmentSpecular","PhongAnimationMaterial","StandardAnimationMaterial","fragmentRoughness","fragmentMetalness","ToonAnimationMaterial","PointsAnimationMaterial","fragmentShape","DepthAnimationMaterial","depthPacking","RGBADepthPacking","clipping","DistanceAnimationMaterial","PrefabBufferGeometry","prefab","count","BufferGeometry","prefabGeometry","isPrefabBufferGeometry","isBufferGeometry","prefabCount","prefabVertexCount","attributes","vertices","bufferIndices","bufferPositions","MultiPrefabBufferGeometry","prefabs","repeatCount","isArray","prefabGeometries","prefabGeometriesCount","prefabVertexCounts","repeatVertexCount","reduce","InstancedPrefabBufferGeometry","isGeometry","InstancedBufferGeometry","maxInstancedCount","_this","stringifyChunk","toJSON","meta","Material","uniform","isTexture","uuid","isColor","getHex","isVector2","toArray","isVector3","isVector4","isMatrix4","prefabIndices","prefabIndexCount","array","prefabFaceCount","faces","_i","face","a","b","indexBuffer","Uint32Array","setIndex","BufferAttribute","_i2","k","positionBuffer","createAttribute","positions","_i3","_offset","_j","prefabVertex","z","bufferUvs","uvBuffer","uvs","uv","_uvs","_i4","faceVertexUvs","_i5","_offset2","_j2","_uv","itemSize","factory","buffer","Float32Array","attribute","addAttribute","setPrefabData","prefabIndex","repeatIndexCount","geometry","indices","indexOffset","prefabOffset","vertexCount","prefabPositions","_this2","prefabUvs","uvObjects","prefabGeometryIndex","prefabGeometryVertexCount","whole","wholeOffset","part","partOffset","InstancedBufferAttribute","Utils","separateFaces","va","vb","vc","computeCentroid","Vector3","randomInBox","box","Math$1","randFloat","randomAxis","randFloatSpread","normalize","createDepthAnimationMaterial","sourceMaterial","createDistanceAnimationMaterial","ModelBufferGeometry","model","options","modelGeometry","faceCount","computeCentroids","localizeFaces","PointBufferGeometry","pointCount","centroids","centroid","vertex","bufferSkinning","skinIndexBuffer","skinWeightBuffer","skinIndex","skinIndices","skinWeight","skinWeights","setFaceData","faceIndex","setPointData","pointIndex","catmull_rom_spline","cubic_bezier","ease_back_in","ease_back_in_out","ease_back_out","ease_bezier","ease_bounce_in","ease_bounce_in_out","ease_bounce_out","ease_circ_in","ease_circ_in_out","ease_circ_out","ease_cubic_in","ease_cubic_in_out","ease_cubic_out","ease_elastic_in","ease_elastic_in_out","ease_elastic_out","ease_expo_in","ease_expo_in_out","ease_expo_out","ease_quad_in","ease_quad_in_out","ease_quad_out","ease_quart_in","ease_quart_in_out","ease_quart_out","ease_quint_in","ease_quint_in_out","ease_quint_out","ease_sine_in","ease_sine_in_out","ease_sine_out","quadratic_bezier","quaternion_rotation","quaternion_slerp","ShaderChunk","TimelineSegment","duration","transition","compiler","trail","Timeline","timeKey","segments","__key","compile","segmentDefinitions","register","definition","transitions","positionOffset","_eval","eval","processTransition","from","defaultFrom","to","toString","fillGaps","s0","s1","end","getTransformCalls","TimelineChunks","vec3","toPrecision","vec4","delayDuration","segment","progress","ease","easeParams","renderCheck","startTime","endTime","TranslationSegment","ScaleSegment","origin","RotationSegment","fromAxisAngle","Vector4","axis","toAxis","toAxisAngle","AnimationMesh","shaderOptions","animationPhase","Box3","setFromObject","MeshNormalMaterial","BAS","aDelayDuration","minDuration","maxDuration","maxDelayX","maxDelayY","stretch","totalDuration","delayY","delayX","mapLinear","abs","random","aControl0","aControl1","control0","control1","signY","sign","addVectors","Texture","NearestFilter","flatShading","uTime","needSplash","textureImage","TextureLoader","load","canvasResolution","innerWidth","innerHeight","metalness","roughness","frustumCulled","Main","root","light","AmbientLight","animationMesh","tl","TimelineMax","repeat","time","yoyo","Power0","easeIn","onComplete","AnimationOptions","main","addAnimationMesh","component"],"mappings":"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","file":"js/app.a1b842d4.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* eslint-disable */\nconst THREE = require('three');\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.EffectComposer = function (renderer, renderTarget) {\n\n    this.renderer = renderer;\n\n    if (renderTarget === undefined) {\n\n        var parameters = {\n            minFilter: THREE.LinearFilter,\n            magFilter: THREE.LinearFilter,\n            format: THREE.RGBAFormat,\n            stencilBuffer: false\n        };\n        var size = renderer.getSize();\n        renderTarget = new THREE.WebGLRenderTarget(size.width, size.height, parameters);\n\n    }\n\n    this.renderTarget1 = renderTarget;\n    this.renderTarget2 = renderTarget.clone();\n\n    this.writeBuffer = this.renderTarget1;\n    this.readBuffer = this.renderTarget2;\n\n    this.passes = [];\n\n    if (THREE.CopyShader === undefined)\n        console.error(\"THREE.EffectComposer relies on THREE.CopyShader\");\n\n    this.copyPass = new THREE.ShaderPass(THREE.CopyShader);\n\n};\n\nObject.assign(THREE.EffectComposer.prototype, {\n\n    swapBuffers: function () {\n\n        var tmp = this.readBuffer;\n        this.readBuffer = this.writeBuffer;\n        this.writeBuffer = tmp;\n\n    },\n\n    addPass: function (pass) {\n\n        this.passes.push(pass);\n\n        var size = this.renderer.getSize();\n        pass.setSize(size.width, size.height);\n\n    },\n\n    insertPass: function (pass, index) {\n\n        this.passes.splice(index, 0, pass);\n\n    },\n\n    render: function (delta) {\n\n        var maskActive = false;\n\n        var pass, i, il = this.passes.length;\n\n        for (i = 0; i < il; i++) {\n\n            pass = this.passes[i];\n\n            if (pass.enabled === false) continue;\n\n            pass.render(this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive);\n\n            if (pass.needsSwap) {\n\n                if (maskActive) {\n\n                    var context = this.renderer.context;\n\n                    context.stencilFunc(context.NOTEQUAL, 1, 0xffffffff);\n\n                    this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer, delta);\n\n                    context.stencilFunc(context.EQUAL, 1, 0xffffffff);\n\n                }\n\n                this.swapBuffers();\n\n            }\n\n            if (pass instanceof THREE.MaskPass) {\n\n                maskActive = true;\n\n            } else if (pass instanceof THREE.ClearMaskPass) {\n\n                maskActive = false;\n\n            }\n\n        }\n\n    },\n\n    reset: function (renderTarget) {\n\n        if (renderTarget === undefined) {\n\n            var size = this.renderer.getSize();\n\n            renderTarget = this.renderTarget1.clone();\n            renderTarget.setSize(size.width, size.height);\n\n        }\n\n        this.renderTarget1.dispose();\n        this.renderTarget2.dispose();\n        this.renderTarget1 = renderTarget;\n        this.renderTarget2 = renderTarget.clone();\n\n        this.writeBuffer = this.renderTarget1;\n        this.readBuffer = this.renderTarget2;\n\n    },\n\n    setSize: function (width, height) {\n\n        this.renderTarget1.setSize(width, height);\n        this.renderTarget2.setSize(width, height);\n\n        for (var i = 0; i < this.passes.length; i++) {\n\n            this.passes[i].setSize(width, height);\n\n        }\n\n    }\n\n});\n\n\nTHREE.Pass = function () {\n\n    // if set to true, the pass is processed by the composer\n    this.enabled = true;\n\n    // if set to true, the pass indicates to swap read and write buffer after rendering\n    this.needsSwap = true;\n\n    // if set to true, the pass clears its buffer before rendering\n    this.clear = false;\n\n    // if set to true, the result of the pass is rendered to screen\n    this.renderToScreen = false;\n\n};\n\nObject.assign(THREE.Pass.prototype, {\n\n    setSize: function (width, height) { },\n\n    render: function (renderer, writeBuffer, readBuffer, delta, maskActive) {\n\n        console.error(\"THREE.Pass: .render() must be implemented in derived pass.\");\n\n    }\n\n});\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ShaderPass = function (shader, textureID) {\n\n    THREE.Pass.call(this);\n\n    this.textureID = (textureID !== undefined) ? textureID : \"tDiffuse\";\n\n    if (shader instanceof THREE.ShaderMaterial) {\n\n        this.uniforms = shader.uniforms;\n\n        this.material = shader;\n\n    } else if (shader) {\n\n        this.uniforms = THREE.UniformsUtils.clone(shader.uniforms);\n\n        this.material = new THREE.ShaderMaterial({\n\n            defines: shader.defines || {},\n            uniforms: this.uniforms,\n            vertexShader: shader.vertexShader,\n            fragmentShader: shader.fragmentShader\n\n        });\n\n    }\n\n    this.camera = new THREE.OrthographicCamera(- 1, 1, 1, - 1, 0, 1);\n    this.scene = new THREE.Scene();\n\n    this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);\n    this.scene.add(this.quad);\n\n};\n\nTHREE.ShaderPass.prototype = Object.assign(Object.create(THREE.Pass.prototype), {\n\n    constructor: THREE.ShaderPass,\n\n    render: function (renderer, writeBuffer, readBuffer, delta, maskActive) {\n\n        if (this.uniforms[this.textureID]) {\n\n            this.uniforms[this.textureID].value = readBuffer.texture;\n\n        }\n\n        this.quad.material = this.material;\n\n        if (this.renderToScreen) {\n\n            renderer.render(this.scene, this.camera);\n\n        } else {\n\n            renderer.render(this.scene, this.camera, writeBuffer, this.clear);\n\n        }\n\n    }\n\n});\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.RenderPass = function (scene, camera, overrideMaterial, clearColor, clearAlpha) {\n\n    THREE.Pass.call(this);\n\n    this.scene = scene;\n    this.camera = camera;\n\n    this.overrideMaterial = overrideMaterial;\n\n    this.clearColor = clearColor;\n    this.clearAlpha = (clearAlpha !== undefined) ? clearAlpha : 1;\n\n    this.oldClearColor = new THREE.Color();\n    this.oldClearAlpha = 1;\n\n    this.clear = true;\n    this.needsSwap = false;\n\n};\n\nTHREE.RenderPass.prototype = Object.assign(Object.create(THREE.Pass.prototype), {\n\n    constructor: THREE.RenderPass,\n\n    render: function (renderer, writeBuffer, readBuffer, delta, maskActive) {\n\n        this.scene.overrideMaterial = this.overrideMaterial;\n\n        if (this.clearColor) {\n\n            this.oldClearColor.copy(renderer.getClearColor());\n            this.oldClearAlpha = renderer.getClearAlpha();\n\n            renderer.setClearColor(this.clearColor, this.clearAlpha);\n\n        }\n\n        renderer.render(this.scene, this.camera, readBuffer, this.clear);\n\n        if (this.clearColor) {\n\n            renderer.setClearColor(this.oldClearColor, this.oldClearAlpha);\n\n        }\n\n        this.scene.overrideMaterial = null;\n\n    }\n\n});\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.MaskPass = function (scene, camera) {\n\n    THREE.Pass.call(this);\n\n    this.scene = scene;\n    this.camera = camera;\n\n    this.clear = true;\n    this.needsSwap = false;\n\n    this.inverse = false;\n\n};\n\nTHREE.MaskPass.prototype = Object.assign(Object.create(THREE.Pass.prototype), {\n\n    constructor: THREE.MaskPass,\n\n    render: function (renderer, writeBuffer, readBuffer, delta, maskActive) {\n\n        var context = renderer.context;\n        var state = renderer.state;\n\n        // don't update color or depth\n\n        state.buffers.color.setMask(false);\n        state.buffers.depth.setMask(false);\n\n        // lock buffers\n\n        state.buffers.color.setLocked(true);\n        state.buffers.depth.setLocked(true);\n\n        // set up stencil\n\n        var writeValue, clearValue;\n\n        if (this.inverse) {\n\n            writeValue = 0;\n            clearValue = 1;\n\n        } else {\n\n            writeValue = 1;\n            clearValue = 0;\n\n        }\n\n        state.buffers.stencil.setTest(true);\n        state.buffers.stencil.setOp(context.REPLACE, context.REPLACE, context.REPLACE);\n        state.buffers.stencil.setFunc(context.ALWAYS, writeValue, 0xffffffff);\n        state.buffers.stencil.setClear(clearValue);\n\n        // draw into the stencil buffer\n\n        renderer.render(this.scene, this.camera, readBuffer, this.clear);\n        renderer.render(this.scene, this.camera, writeBuffer, this.clear);\n\n        // unlock color and depth buffer for subsequent rendering\n\n        state.buffers.color.setLocked(false);\n        state.buffers.depth.setLocked(false);\n\n        // only render where stencil is set to 1\n\n        state.buffers.stencil.setFunc(context.EQUAL, 1, 0xffffffff);  // draw if == 1\n        state.buffers.stencil.setOp(context.KEEP, context.KEEP, context.KEEP);\n\n    }\n\n});\n\n\nTHREE.ClearMaskPass = function () {\n\n    THREE.Pass.call(this);\n\n    this.needsSwap = false;\n\n};\n\nTHREE.ClearMaskPass.prototype = Object.create(THREE.Pass.prototype);\n\nObject.assign(THREE.ClearMaskPass.prototype, {\n\n    render: function (renderer, writeBuffer, readBuffer, delta, maskActive) {\n\n        renderer.state.buffers.stencil.setTest(false);\n\n    }\n\n});\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.BloomPass = function (strength, kernelSize, sigma, resolution) {\n\n    THREE.Pass.call(this);\n\n    strength = (strength !== undefined) ? strength : 1;\n    kernelSize = (kernelSize !== undefined) ? kernelSize : 25;\n    sigma = (sigma !== undefined) ? sigma : 4.0;\n    resolution = (resolution !== undefined) ? resolution : 256;\n\n    // render targets\n\n    var pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat };\n\n    this.renderTargetX = new THREE.WebGLRenderTarget(resolution, resolution, pars);\n    this.renderTargetY = new THREE.WebGLRenderTarget(resolution, resolution, pars);\n\n    // copy material\n\n    if (THREE.CopyShader === undefined)\n        console.error(\"THREE.BloomPass relies on THREE.CopyShader\");\n\n    var copyShader = THREE.CopyShader;\n\n    this.copyUniforms = THREE.UniformsUtils.clone(copyShader.uniforms);\n\n    this.copyUniforms[\"opacity\"].value = strength;\n\n    this.materialCopy = new THREE.ShaderMaterial({\n\n        uniforms: this.copyUniforms,\n        vertexShader: copyShader.vertexShader,\n        fragmentShader: copyShader.fragmentShader,\n        blending: THREE.AdditiveBlending,\n        transparent: true\n\n    });\n\n    // convolution material\n\n    if (THREE.ConvolutionShader === undefined)\n        console.error(\"THREE.BloomPass relies on THREE.ConvolutionShader\");\n\n    var convolutionShader = THREE.ConvolutionShader;\n\n    this.convolutionUniforms = THREE.UniformsUtils.clone(convolutionShader.uniforms);\n\n    this.convolutionUniforms[\"uImageIncrement\"].value = THREE.BloomPass.blurX;\n    this.convolutionUniforms[\"cKernel\"].value = THREE.ConvolutionShader.buildKernel(sigma);\n\n    this.materialConvolution = new THREE.ShaderMaterial({\n\n        uniforms: this.convolutionUniforms,\n        vertexShader: convolutionShader.vertexShader,\n        fragmentShader: convolutionShader.fragmentShader,\n        defines: {\n            \"KERNEL_SIZE_FLOAT\": kernelSize.toFixed(1),\n            \"KERNEL_SIZE_INT\": kernelSize.toFixed(0)\n        }\n\n    });\n\n    this.needsSwap = false;\n\n    this.camera = new THREE.OrthographicCamera(- 1, 1, 1, - 1, 0, 1);\n    this.scene = new THREE.Scene();\n\n    this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);\n    this.scene.add(this.quad);\n\n};\n\nTHREE.BloomPass.prototype = Object.assign(Object.create(THREE.Pass.prototype), {\n\n    constructor: THREE.BloomPass,\n\n    render: function (renderer, writeBuffer, readBuffer, delta, maskActive) {\n\n        if (maskActive) renderer.context.disable(renderer.context.STENCIL_TEST);\n\n        // Render quad with blured scene into texture (convolution pass 1)\n\n        this.quad.material = this.materialConvolution;\n\n        this.convolutionUniforms[\"tDiffuse\"].value = readBuffer.texture;\n        this.convolutionUniforms[\"uImageIncrement\"].value = THREE.BloomPass.blurX;\n\n        renderer.render(this.scene, this.camera, this.renderTargetX, true);\n\n\n        // Render quad with blured scene into texture (convolution pass 2)\n\n        this.convolutionUniforms[\"tDiffuse\"].value = this.renderTargetX.texture;\n        this.convolutionUniforms[\"uImageIncrement\"].value = THREE.BloomPass.blurY;\n\n        renderer.render(this.scene, this.camera, this.renderTargetY, true);\n\n        // Render original scene with superimposed blur to texture\n\n        this.quad.material = this.materialCopy;\n\n        this.copyUniforms[\"tDiffuse\"].value = this.renderTargetY.texture;\n\n        if (maskActive) renderer.context.enable(renderer.context.STENCIL_TEST);\n\n        renderer.render(this.scene, this.camera, readBuffer, this.clear);\n\n    }\n\n});\n\nTHREE.BloomPass.blurX = new THREE.Vector2(0.001953125, 0.0);\nTHREE.BloomPass.blurY = new THREE.Vector2(0.0, 0.001953125);\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nTHREE.CopyShader = {\n\n    uniforms: {\n\n        \"tDiffuse\": { type: \"t\", value: null },\n        \"opacity\": { type: \"f\", value: 1.0 }\n\n    },\n\n    vertexShader: [\n\n        \"varying vec2 vUv;\",\n\n        \"void main() {\",\n\n        \"vUv = uv;\",\n        \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n        \"}\"\n\n    ].join(\"\\n\"),\n\n    fragmentShader: [\n\n        \"uniform float opacity;\",\n\n        \"uniform sampler2D tDiffuse;\",\n\n        \"varying vec2 vUv;\",\n\n        \"void main() {\",\n\n        \"vec4 texel = texture2D( tDiffuse, vUv );\",\n        \"gl_FragColor = opacity * texel;\",\n\n        \"}\"\n\n    ].join(\"\\n\")\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Convolution shader\n * ported from o3d sample to WebGL / GLSL\n * http://o3d.googlecode.com/svn/trunk/samples/convolution.html\n */\n\nTHREE.ConvolutionShader = {\n\n    defines: {\n\n        \"KERNEL_SIZE_FLOAT\": \"25.0\",\n        \"KERNEL_SIZE_INT\": \"25\",\n\n    },\n\n    uniforms: {\n\n        \"tDiffuse\": { type: \"t\", value: null },\n        \"uImageIncrement\": { type: \"v2\", value: new THREE.Vector2(0.001953125, 0.0) },\n        \"cKernel\": { type: \"fv1\", value: [] }\n\n    },\n\n    vertexShader: [\n\n        \"uniform vec2 uImageIncrement;\",\n\n        \"varying vec2 vUv;\",\n\n        \"void main() {\",\n\n        \"vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\",\n        \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n        \"}\"\n\n    ].join(\"\\n\"),\n\n    fragmentShader: [\n\n        \"uniform float cKernel[ KERNEL_SIZE_INT ];\",\n\n        \"uniform sampler2D tDiffuse;\",\n        \"uniform vec2 uImageIncrement;\",\n\n        \"varying vec2 vUv;\",\n\n        \"void main() {\",\n\n        \"vec2 imageCoord = vUv;\",\n        \"vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\",\n\n        \"for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\",\n\n        \"sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\",\n        \"imageCoord += uImageIncrement;\",\n\n        \"}\",\n\n        \"gl_FragColor = sum;\",\n\n        \"}\"\n\n\n    ].join(\"\\n\"),\n\n    buildKernel: function (sigma) {\n\n        // We lop off the sqrt(2 * pi) * sigma term, since we're going to normalize anyway.\n\n        function gauss(x, sigma) {\n\n            return Math.exp(- (x * x) / (2.0 * sigma * sigma));\n\n        }\n\n        var i, values, sum, halfWidth, kMaxKernelSize = 25, kernelSize = 2 * Math.ceil(sigma * 3.0) + 1;\n\n        if (kernelSize > kMaxKernelSize) kernelSize = kMaxKernelSize;\n        halfWidth = (kernelSize - 1) * 0.5;\n\n        values = new Array(kernelSize);\n        sum = 0.0;\n        for (i = 0; i < kernelSize; ++i) {\n\n            values[i] = gauss(i - halfWidth, sigma);\n            sum += values[i];\n\n        }\n\n        // normalize the kernel\n\n        for (i = 0; i < kernelSize; ++i) values[i] /= sum;\n\n        return values;\n\n    }\n\n};\n\nexport default THREE;","/* eslint-disable */\n\nimport * as THREE from 'three';\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: THREE.MOUSE.LEFT, MIDDLE: THREE.MOUSE.MIDDLE, RIGHT: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY_PAN: 4 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t//console.log( 'handleKeyDown' );\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchStartDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchMoveDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyIn( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.MIDDLE:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.RIGHT:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY_PAN ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nOrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nOrbitControls.prototype.constructor = OrbitControls;\n\nObject.defineProperties(OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n\nexport default OrbitControls;","/* eslint-disable */\r\nimport THREE from '../libs/three.extensions';\r\nimport OrbitControls from './orbit.controls';\r\n\r\nfunction THREERoot(params) {\r\n  // defaults\r\n  params = Object.assign({\r\n    container:'#app',\r\n    fov:60,\r\n    zNear:1,\r\n    zFar:10000,\r\n    createCameraControls: true,\r\n    autoStart: true,\r\n    pixelRatio: window.devicePixelRatio,\r\n    antialias: (window.devicePixelRatio === 1),\r\n    alpha: false\r\n  }, params);\r\n\r\n  // maps and arrays\r\n  this.updateCallbacks = [];\r\n  this.resizeCallbacks = [];\r\n  this.objects = {};\r\n\r\n  // renderer\r\n  this.renderer = new THREE.WebGLRenderer({\r\n    antialias: params.antialias,\r\n    alpha: params.alpha\r\n  });\r\n  this.renderer.setPixelRatio(params.pixelRatio);\r\n\r\n\r\n\r\n  // container\r\n  this.container = document.body; //(typeof params.container === 'string') ? document.querySelector(params.container) : params.container;\r\n  document.body.appendChild(this.renderer.domElement);\r\n\r\n  var w = this.container.clientWidth;\r\n  var h = this.container.clientHeight;\r\n  // camera\r\n  this.camera = new THREE.PerspectiveCamera(\r\n    params.fov,\r\n    //window.innerWidth / window.innerHeight,\r\n    w / h,\r\n    params.zNear,\r\n    params.zFar\r\n  );\r\n\r\n  // scene\r\n  this.scene = new THREE.Scene();\r\n\r\n  // resize handling\r\n  this.resize = this.resize.bind(this);\r\n  setTimeout(()=>this.resize(), 1);\r\n  window.addEventListener('resize', this.resize, false);\r\n\r\n  // tick / update / render\r\n  this.tick = this.tick.bind(this);\r\n  params.autoStart && this.tick();\r\n\r\n  // optional camera controls\r\n  params.createCameraControls && this.createOrbitControls();\r\n}\r\nTHREERoot.prototype = {\r\n  createOrbitControls: function() {\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n    this.addUpdateCallback(this.controls.update.bind(this.controls));\r\n  },\r\n  start: function() {\r\n    this.tick();\r\n  },\r\n  addUpdateCallback: function(callback) {\r\n    this.updateCallbacks.push(callback);\r\n  },\r\n  addResizeCallback: function(callback) {\r\n    this.resizeCallbacks.push(callback);\r\n  },\r\n  add: function(object, key) {\r\n    key && (this.objects[key] = object);\r\n    this.scene.add(object);\r\n  },\r\n  addTo: function(object, parentKey, key) {\r\n    key && (this.objects[key] = object);\r\n    this.get(parentKey).add(object);\r\n  },\r\n  get: function(key) {\r\n    return this.objects[key];\r\n  },\r\n  remove: function(o) {\r\n    var object;\r\n\r\n    if (typeof o === 'string') {\r\n      object = this.objects[o];\r\n    }\r\n    else {\r\n      object = o;\r\n    }\r\n\r\n    if (object) {\r\n      object.parent.remove(object);\r\n      delete this.objects[o];\r\n    }\r\n  },\r\n  tick: function() {\r\n    this.update();\r\n    this.render();\r\n    requestAnimationFrame(this.tick);\r\n  },\r\n  update: function() {\r\n    this.updateCallbacks.forEach(function(callback) {callback()});\r\n  },\r\n  render: function() {\r\n    this.renderer.render(this.scene, this.camera);\r\n  },\r\n  resize: function() {\r\n    /*var width = window.innerWidth;\r\n    var height = window.innerHeight;*/\r\n    var width = this.container.clientWidth;\r\n    var height = this.container.clientHeight;\r\n\r\n    this.camera.aspect = width / height;\r\n    this.camera.updateProjectionMatrix();\r\n\r\n    this.renderer.setSize(width, height);\r\n    this.resizeCallbacks.forEach(function(callback) {callback()});\r\n  },\r\n  initPostProcessing:function(passes) {\r\n    var size = this.renderer.getSize(this.renderer);\r\n    var pixelRatio = this.renderer.getPixelRatio();\r\n    size.width *= pixelRatio;\r\n    size.height *= pixelRatio;\r\n\r\n    var composer = this.composer = new THREE.EffectComposer(this.renderer, new THREE.WebGLRenderTarget(size.width, size.height, {\r\n      minFilter: THREE.LinearFilter,\r\n      magFilter: THREE.LinearFilter,\r\n      format: THREE.RGBAFormat,\r\n      stencilBuffer: false\r\n    }));\r\n\r\n    var renderPass = new THREE.RenderPass(this.scene, this.camera);\r\n    this.composer.addPass(renderPass);\r\n\r\n    for (var i = 0; i < passes.length; i++) {\r\n      var pass = passes[i];\r\n      pass.renderToScreen = (i === passes.length - 1);\r\n      this.composer.addPass(pass);\r\n    }\r\n\r\n    this.renderer.autoClear = false;\r\n    this.render = function() {\r\n      this.renderer.clear();\r\n      this.composer.render();\r\n    }.bind(this);\r\n\r\n    this.addResizeCallback(function() {\r\n      /*var width = window.innerWidth;\r\n      var height = window.innerHeight;*/\r\n      var width = this.container.clientWidth;\r\n      var height = this.container.clientHeight;\r\n\r\n      composer.setSize(width * pixelRatio, height * pixelRatio);\r\n    }.bind(this));\r\n  }\r\n};\r\n\r\nexport default THREERoot;","/* eslint-disable */\nimport { AddOperation, BufferAttribute, BufferGeometry, CubeReflectionMapping, CubeRefractionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, InstancedBufferAttribute, InstancedBufferGeometry, Material, Math as Math$1, MixOperation, MultiplyOperation, RGBADepthPacking, ShaderLib, ShaderMaterial, SphericalReflectionMapping, UniformsUtils, Vector3, Vector4 } from 'three';\n\nfunction BaseAnimationMaterial(parameters, uniforms) {\n  ShaderMaterial.call(this);\n\n  var uniformValues = parameters.uniformValues;\n  delete parameters.uniformValues;\n\n  this.setValues(parameters);\n\n  this.uniforms = UniformsUtils.merge([uniforms, this.uniforms]);\n\n  this.setUniformValues(uniformValues);\n\n  if (uniformValues) {\n    uniformValues.map && (this.defines['USE_MAP'] = '');\n    uniformValues.normalMap && (this.defines['USE_NORMALMAP'] = '');\n    uniformValues.envMap && (this.defines['USE_ENVMAP'] = '');\n    uniformValues.aoMap && (this.defines['USE_AOMAP'] = '');\n    uniformValues.specularMap && (this.defines['USE_SPECULARMAP'] = '');\n    uniformValues.alphaMap && (this.defines['USE_ALPHAMAP'] = '');\n    uniformValues.lightMap && (this.defines['USE_LIGHTMAP'] = '');\n    uniformValues.emissiveMap && (this.defines['USE_EMISSIVEMAP'] = '');\n    uniformValues.bumpMap && (this.defines['USE_BUMPMAP'] = '');\n    uniformValues.displacementMap && (this.defines['USE_DISPLACEMENTMAP'] = '');\n    uniformValues.roughnessMap && (this.defines['USE_DISPLACEMENTMAP'] = '');\n    uniformValues.roughnessMap && (this.defines['USE_ROUGHNESSMAP'] = '');\n    uniformValues.metalnessMap && (this.defines['USE_METALNESSMAP'] = '');\n    uniformValues.gradientMap && (this.defines['USE_GRADIENTMAP'] = '');\n\n    if (uniformValues.envMap) {\n      this.defines['USE_ENVMAP'] = '';\n\n      var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n      var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n      var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n      switch (uniformValues.envMap.mapping) {\n        case CubeReflectionMapping:\n        case CubeRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n          break;\n        case CubeUVReflectionMapping:\n        case CubeUVRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n          break;\n        case EquirectangularReflectionMapping:\n        case EquirectangularRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n          break;\n        case SphericalReflectionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n          break;\n      }\n\n      switch (uniformValues.envMap.mapping) {\n        case CubeRefractionMapping:\n        case EquirectangularRefractionMapping:\n          envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n          break;\n      }\n\n      switch (uniformValues.combine) {\n        case MixOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n          break;\n        case AddOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n          break;\n        case MultiplyOperation:\n        default:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n          break;\n      }\n\n      this.defines[envMapTypeDefine] = '';\n      this.defines[envMapBlendingDefine] = '';\n      this.defines[envMapModeDefine] = '';\n    }\n  }\n}\n\nBaseAnimationMaterial.prototype = Object.assign(Object.create(ShaderMaterial.prototype), {\n  constructor: BaseAnimationMaterial,\n\n  setUniformValues: function setUniformValues(values) {\n    var _this = this;\n\n    if (!values) return;\n\n    var keys = Object.keys(values);\n\n    keys.forEach(function (key) {\n      key in _this.uniforms && (_this.uniforms[key].value = values[key]);\n    });\n  },\n  stringifyChunk: function stringifyChunk(name) {\n    var value = void 0;\n\n    if (!this[name]) {\n      value = '';\n    } else if (typeof this[name] === 'string') {\n      value = this[name];\n    } else {\n      value = this[name].join('\\n');\n    }\n\n    return value;\n  },\n  toJSON: function toJSON(meta) {\n    var data = Material.prototype.toJSON.call(this, meta);\n\n    data.uniforms = {};\n\n    for (var name in this.uniforms) {\n\n      var uniform = this.uniforms[name];\n      var value = uniform.value;\n\n      if (value === null || value === undefined) {\n\n        data.uniforms[name] = {\n          value: value\n        };\n      } else if (value.isTexture) {\n\n        data.uniforms[name] = {\n          type: 't',\n          value: value.toJSON(meta).uuid\n        };\n      } else if (value.isColor) {\n\n        data.uniforms[name] = {\n          type: 'c',\n          value: value.getHex()\n        };\n      } else if (value.isVector2) {\n\n        data.uniforms[name] = {\n          type: 'v2',\n          value: value.toArray()\n        };\n      } else if (value.isVector3) {\n\n        data.uniforms[name] = {\n          type: 'v3',\n          value: value.toArray()\n        };\n      } else if (value.isVector4) {\n\n        data.uniforms[name] = {\n          type: 'v4',\n          value: value.toArray()\n        };\n      } else if (value.isMatrix4) {\n\n        data.uniforms[name] = {\n          type: 'm4',\n          value: value.toArray()\n        };\n      } else {\n\n        data.uniforms[name] = {\n          value: value\n        };\n\n        // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n      }\n    }\n\n    if (Object.keys(this.defines).length > 0) data.defines = this.defines;\n\n    data.vertexShader = this.vertexShader;\n    data.fragmentShader = this.fragmentShader;\n\n    return data;\n  }\n});\n\n/**\n * Extends THREE.MeshBasicMaterial with custom shader chunks.\n *\n * @see http://three-bas-examples.surge.sh/examples/materials_basic/\n *\n * @param {Object} parameters Object containing material properties and custom shader chunks.\n * @constructor\n */\nfunction BasicAnimationMaterial(parameters) {\n  this.varyingParameters = [];\n\n  this.vertexParameters = [];\n  this.vertexFunctions = [];\n  this.vertexInit = [];\n  this.vertexNormal = [];\n  this.vertexPosition = [];\n  this.vertexColor = [];\n  this.vertexPostMorph = [];\n  this.vertexPostSkinning = [];\n\n  this.fragmentFunctions = [];\n  this.fragmentParameters = [];\n  this.fragmentInit = [];\n  this.fragmentMap = [];\n  this.fragmentDiffuse = [];\n\n  BaseAnimationMaterial.call(this, parameters, ShaderLib['basic'].uniforms);\n\n  this.lights = false;\n  this.vertexShader = this.concatVertexShader();\n  this.fragmentShader = this.concatFragmentShader();\n}\nBasicAnimationMaterial.prototype = Object.create(BaseAnimationMaterial.prototype);\nBasicAnimationMaterial.prototype.constructor = BasicAnimationMaterial;\n\nBasicAnimationMaterial.prototype.concatVertexShader = function () {\n  return '\\n  #include <common>\\n  #include <uv_pars_vertex>\\n  #include <uv2_pars_vertex>\\n  #include <envmap_pars_vertex>\\n  #include <color_pars_vertex>\\n  #include <fog_pars_vertex>\\n  #include <morphtarget_pars_vertex>\\n  #include <skinning_pars_vertex>\\n  #include <logdepthbuf_pars_vertex>\\n  #include <clipping_planes_pars_vertex>\\n  \\n  ' + this.stringifyChunk('vertexParameters') + '\\n  ' + this.stringifyChunk('varyingParameters') + '\\n  ' + this.stringifyChunk('vertexFunctions') + '\\n  \\n  void main() {\\n\\n    ' + this.stringifyChunk('vertexInit') + '\\n  \\n    #include <uv_vertex>\\n    #include <uv2_vertex>\\n    #include <color_vertex>\\n    #include <skinbase_vertex>\\n  \\n    #ifdef USE_ENVMAP\\n  \\n    #include <beginnormal_vertex>\\n    \\n    ' + this.stringifyChunk('vertexNormal') + '\\n    \\n    #include <morphnormal_vertex>\\n    #include <skinnormal_vertex>\\n    #include <defaultnormal_vertex>\\n  \\n    #endif\\n  \\n    #include <begin_vertex>\\n    \\n    ' + this.stringifyChunk('vertexPosition') + '\\n    ' + this.stringifyChunk('vertexColor') + '\\n    \\n    #include <morphtarget_vertex>\\n    \\n    ' + this.stringifyChunk('vertexPostMorph') + '\\n    \\n    #include <skinning_vertex>\\n\\n    ' + this.stringifyChunk('vertexPostSkinning') + '\\n\\n    #include <project_vertex>\\n    #include <logdepthbuf_vertex>\\n  \\n    #include <worldpos_vertex>\\n    #include <clipping_planes_vertex>\\n    #include <envmap_vertex>\\n    #include <fog_vertex>\\n  }';\n};\n\nBasicAnimationMaterial.prototype.concatFragmentShader = function () {\n  return '\\n  uniform vec3 diffuse;\\n  uniform float opacity;\\n  \\n  ' + this.stringifyChunk('fragmentParameters') + '\\n  ' + this.stringifyChunk('varyingParameters') + '\\n  ' + this.stringifyChunk('fragmentFunctions') + '\\n  \\n  #ifndef FLAT_SHADED\\n  \\n    varying vec3 vNormal;\\n  \\n  #endif\\n  \\n  #include <common>\\n  #include <color_pars_fragment>\\n  #include <uv_pars_fragment>\\n  #include <uv2_pars_fragment>\\n  #include <map_pars_fragment>\\n  #include <alphamap_pars_fragment>\\n  #include <aomap_pars_fragment>\\n  #include <lightmap_pars_fragment>\\n  #include <envmap_pars_fragment>\\n  #include <fog_pars_fragment>\\n  #include <specularmap_pars_fragment>\\n  #include <logdepthbuf_pars_fragment>\\n  #include <clipping_planes_pars_fragment>\\n  \\n  void main() {\\n  \\n    ' + this.stringifyChunk('fragmentInit') + '\\n  \\n    #include <clipping_planes_fragment>\\n\\n    vec4 diffuseColor = vec4( diffuse, opacity );\\n\\n    ' + this.stringifyChunk('fragmentDiffuse') + '\\n  \\n    #include <logdepthbuf_fragment>\\n    \\n    ' + (this.stringifyChunk('fragmentMap') || '#include <map_fragment>') + '\\n    \\n    #include <color_fragment>\\n    #include <alphamap_fragment>\\n    #include <alphatest_fragment>\\n    #include <specularmap_fragment>\\n  \\n    ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n  \\n    // accumulation (baked indirect lighting only)\\n    #ifdef USE_LIGHTMAP\\n  \\n      reflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n  \\n    #else\\n  \\n      reflectedLight.indirectDiffuse += vec3( 1.0 );\\n  \\n    #endif\\n  \\n    // modulation\\n    #include <aomap_fragment>\\n  \\n    reflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n  \\n    vec3 outgoingLight = reflectedLight.indirectDiffuse;\\n  \\n    #include <envmap_fragment>\\n  \\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n  \\n    #include <premultiplied_alpha_fragment>\\n    #include <tonemapping_fragment>\\n    #include <encodings_fragment>\\n    #include <fog_fragment>\\n  }';\n};\n\n/**\n * Extends THREE.MeshLambertMaterial with custom shader chunks.\n *\n * @see http://three-bas-examples.surge.sh/examples/materials_lambert/\n *\n * @param {Object} parameters Object containing material properties and custom shader chunks.\n * @constructor\n */\nfunction LambertAnimationMaterial(parameters) {\n  this.varyingParameters = [];\n\n  this.vertexFunctions = [];\n  this.vertexParameters = [];\n  this.vertexInit = [];\n  this.vertexNormal = [];\n  this.vertexPosition = [];\n  this.vertexColor = [];\n  this.vertexPostMorph = [];\n  this.vertexPostSkinning = [];\n\n  this.fragmentFunctions = [];\n  this.fragmentParameters = [];\n  this.fragmentInit = [];\n  this.fragmentMap = [];\n  this.fragmentDiffuse = [];\n  this.fragmentEmissive = [];\n  this.fragmentSpecular = [];\n\n  BaseAnimationMaterial.call(this, parameters, ShaderLib['lambert'].uniforms);\n\n  this.lights = true;\n  this.vertexShader = this.concatVertexShader();\n  this.fragmentShader = this.concatFragmentShader();\n}\nLambertAnimationMaterial.prototype = Object.create(BaseAnimationMaterial.prototype);\nLambertAnimationMaterial.prototype.constructor = LambertAnimationMaterial;\n\nLambertAnimationMaterial.prototype.concatVertexShader = function () {\n  return '\\n  #define LAMBERT\\n\\n  varying vec3 vLightFront;\\n  \\n  #ifdef DOUBLE_SIDED\\n  \\n    varying vec3 vLightBack;\\n  \\n  #endif\\n  \\n  #include <common>\\n  #include <uv_pars_vertex>\\n  #include <uv2_pars_vertex>\\n  #include <envmap_pars_vertex>\\n  #include <bsdfs>\\n  #include <lights_pars_begin>\\n  #include <envmap_physical_pars_fragment>\\n  #include <color_pars_vertex>\\n  #include <fog_pars_vertex>\\n  #include <morphtarget_pars_vertex>\\n  #include <skinning_pars_vertex>\\n  #include <shadowmap_pars_vertex>\\n  #include <logdepthbuf_pars_vertex>\\n  #include <clipping_planes_pars_vertex>\\n  \\n  ' + this.stringifyChunk('vertexParameters') + '\\n  ' + this.stringifyChunk('varyingParameters') + '\\n  ' + this.stringifyChunk('vertexFunctions') + '\\n  \\n  void main() {\\n  \\n    ' + this.stringifyChunk('vertexInit') + '\\n  \\n    #include <uv_vertex>\\n    #include <uv2_vertex>\\n    #include <color_vertex>\\n  \\n    #include <beginnormal_vertex>\\n    \\n    ' + this.stringifyChunk('vertexNormal') + '\\n    \\n    #include <morphnormal_vertex>\\n    #include <skinbase_vertex>\\n    #include <skinnormal_vertex>\\n    #include <defaultnormal_vertex>\\n  \\n    #include <begin_vertex>\\n    \\n    ' + this.stringifyChunk('vertexPosition') + '\\n    ' + this.stringifyChunk('vertexColor') + '\\n    \\n    #include <morphtarget_vertex>\\n    \\n    ' + this.stringifyChunk('vertexPostMorph') + '\\n    \\n    #include <skinning_vertex>\\n\\n    ' + this.stringifyChunk('vertexPostSkinning') + '\\n    \\n    #include <project_vertex>\\n    #include <logdepthbuf_vertex>\\n    #include <clipping_planes_vertex>\\n  \\n    #include <worldpos_vertex>\\n    #include <envmap_vertex>\\n    #include <lights_lambert_vertex>\\n    #include <shadowmap_vertex>\\n    #include <fog_vertex>\\n  }';\n};\n\nLambertAnimationMaterial.prototype.concatFragmentShader = function () {\n  return '\\n  uniform vec3 diffuse;\\n  uniform vec3 emissive;\\n  uniform float opacity;\\n  \\n  varying vec3 vLightFront;\\n  \\n  #ifdef DOUBLE_SIDED\\n  \\n    varying vec3 vLightBack;\\n  \\n  #endif\\n  \\n  #include <common>\\n  #include <packing>\\n  #include <dithering_pars_fragment>\\n  #include <color_pars_fragment>\\n  #include <uv_pars_fragment>\\n  #include <uv2_pars_fragment>\\n  #include <map_pars_fragment>\\n  #include <alphamap_pars_fragment>\\n  #include <aomap_pars_fragment>\\n  #include <lightmap_pars_fragment>\\n  #include <emissivemap_pars_fragment>\\n  #include <envmap_pars_fragment>\\n  #include <bsdfs>\\n  #include <lights_pars_begin>\\n  #include <envmap_physical_pars_fragment>\\n  #include <fog_pars_fragment>\\n  #include <shadowmap_pars_fragment>\\n  #include <shadowmask_pars_fragment>\\n  #include <specularmap_pars_fragment>\\n  #include <logdepthbuf_pars_fragment>\\n  #include <clipping_planes_pars_fragment>\\n  \\n  ' + this.stringifyChunk('fragmentParameters') + '\\n  ' + this.stringifyChunk('varyingParameters') + '\\n  ' + this.stringifyChunk('fragmentFunctions') + '\\n  \\n  void main() {\\n  \\n    ' + this.stringifyChunk('fragmentInit') + '\\n  \\n    #include <clipping_planes_fragment>\\n\\n    vec4 diffuseColor = vec4( diffuse, opacity );\\n    ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n    vec3 totalEmissiveRadiance = emissive;\\n\\t\\n    ' + this.stringifyChunk('fragmentDiffuse') + '\\n  \\n    #include <logdepthbuf_fragment>\\n\\n    ' + (this.stringifyChunk('fragmentMap') || '#include <map_fragment>') + '\\n\\n    #include <color_fragment>\\n    #include <alphamap_fragment>\\n    #include <alphatest_fragment>\\n    #include <specularmap_fragment>\\n\\n    ' + this.stringifyChunk('fragmentEmissive') + '\\n\\n    #include <emissivemap_fragment>\\n  \\n    // accumulation\\n    reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n  \\n    #include <lightmap_fragment>\\n  \\n    reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n  \\n    #ifdef DOUBLE_SIDED\\n  \\n      reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n  \\n    #else\\n  \\n      reflectedLight.directDiffuse = vLightFront;\\n  \\n    #endif\\n  \\n    reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n  \\n    // modulation\\n    #include <aomap_fragment>\\n  \\n    vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n  \\n    #include <envmap_fragment>\\n  \\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n  \\n    #include <tonemapping_fragment>\\n    #include <encodings_fragment>\\n    #include <fog_fragment>\\n    #include <premultiplied_alpha_fragment>\\n    #include <dithering_fragment>\\n  }';\n};\n\n/**\n * Extends THREE.MeshPhongMaterial with custom shader chunks.\n *\n * @see http://three-bas-examples.surge.sh/examples/materials_phong/\n *\n * @param {Object} parameters Object containing material properties and custom shader chunks.\n * @constructor\n */\nfunction PhongAnimationMaterial(parameters) {\n  this.varyingParameters = [];\n\n  this.vertexFunctions = [];\n  this.vertexParameters = [];\n  this.vertexInit = [];\n  this.vertexNormal = [];\n  this.vertexPosition = [];\n  this.vertexColor = [];\n\n  this.fragmentFunctions = [];\n  this.fragmentParameters = [];\n  this.fragmentInit = [];\n  this.fragmentMap = [];\n  this.fragmentDiffuse = [];\n  this.fragmentEmissive = [];\n  this.fragmentSpecular = [];\n\n  BaseAnimationMaterial.call(this, parameters, ShaderLib['phong'].uniforms);\n\n  this.lights = true;\n  this.vertexShader = this.concatVertexShader();\n  this.fragmentShader = this.concatFragmentShader();\n}\nPhongAnimationMaterial.prototype = Object.create(BaseAnimationMaterial.prototype);\nPhongAnimationMaterial.prototype.constructor = PhongAnimationMaterial;\n\nPhongAnimationMaterial.prototype.concatVertexShader = function () {\n  return '\\n  #define PHONG\\n\\n  varying vec3 vViewPosition;\\n\\n  #ifndef FLAT_SHADED\\n\\n    varying vec3 vNormal;\\n\\n  #endif\\n\\n  #include <common>\\n  #include <uv_pars_vertex>\\n  #include <uv2_pars_vertex>\\n  #include <displacementmap_pars_vertex>\\n  #include <envmap_pars_vertex>\\n  #include <color_pars_vertex>\\n  #include <fog_pars_vertex>\\n  #include <morphtarget_pars_vertex>\\n  #include <skinning_pars_vertex>\\n  #include <shadowmap_pars_vertex>\\n  #include <logdepthbuf_pars_vertex>\\n  #include <clipping_planes_pars_vertex>\\n\\n  ' + this.stringifyChunk('vertexParameters') + '\\n  ' + this.stringifyChunk('varyingParameters') + '\\n  ' + this.stringifyChunk('vertexFunctions') + '\\n\\n  void main() {\\n\\n    ' + this.stringifyChunk('vertexInit') + '\\n\\n    #include <uv_vertex>\\n    #include <uv2_vertex>\\n    #include <color_vertex>\\n\\n    #include <beginnormal_vertex>\\n\\n    ' + this.stringifyChunk('vertexNormal') + '\\n\\n    #include <morphnormal_vertex>\\n    #include <skinbase_vertex>\\n    #include <skinnormal_vertex>\\n    #include <defaultnormal_vertex>\\n\\n  #ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\\n\\n    vNormal = normalize( transformedNormal );\\n\\n  #endif\\n\\n    #include <begin_vertex>\\n\\n    ' + this.stringifyChunk('vertexPosition') + '\\n    ' + this.stringifyChunk('vertexColor') + '\\n\\n    #include <morphtarget_vertex>\\n    #include <skinning_vertex>\\n    #include <displacementmap_vertex>\\n    #include <project_vertex>\\n    #include <logdepthbuf_vertex>\\n    #include <clipping_planes_vertex>\\n\\n    vViewPosition = - mvPosition.xyz;\\n\\n    #include <worldpos_vertex>\\n    #include <envmap_vertex>\\n    #include <shadowmap_vertex>\\n    #include <fog_vertex>\\n  }';\n};\n\nPhongAnimationMaterial.prototype.concatFragmentShader = function () {\n  return '\\n  #define PHONG\\n\\n  uniform vec3 diffuse;\\n  uniform vec3 emissive;\\n  uniform vec3 specular;\\n  uniform float shininess;\\n  uniform float opacity;\\n\\n  #include <common>\\n  #include <packing>\\n  #include <dithering_pars_fragment>\\n  #include <color_pars_fragment>\\n  #include <uv_pars_fragment>\\n  #include <uv2_pars_fragment>\\n  #include <map_pars_fragment>\\n  #include <alphamap_pars_fragment>\\n  #include <aomap_pars_fragment>\\n  #include <lightmap_pars_fragment>\\n  #include <emissivemap_pars_fragment>\\n  #include <envmap_pars_fragment>\\n  #include <gradientmap_pars_fragment>\\n  #include <fog_pars_fragment>\\n  #include <bsdfs>\\n  #include <lights_pars_begin>\\n  #include <envmap_physical_pars_fragment>\\n  #include <lights_phong_pars_fragment>\\n  #include <shadowmap_pars_fragment>\\n  #include <bumpmap_pars_fragment>\\n  #include <normalmap_pars_fragment>\\n  #include <specularmap_pars_fragment>\\n  #include <logdepthbuf_pars_fragment>\\n  #include <clipping_planes_pars_fragment>\\n\\n  ' + this.stringifyChunk('fragmentParameters') + '\\n  ' + this.stringifyChunk('varyingParameters') + '\\n  ' + this.stringifyChunk('fragmentFunctions') + '\\n\\n  void main() {\\n\\n    ' + this.stringifyChunk('fragmentInit') + '\\n\\n    #include <clipping_planes_fragment>\\n\\n    vec4 diffuseColor = vec4( diffuse, opacity );\\n    ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n    vec3 totalEmissiveRadiance = emissive;\\n\\n    ' + this.stringifyChunk('fragmentDiffuse') + '\\n\\n    #include <logdepthbuf_fragment>\\n\\n    ' + (this.stringifyChunk('fragmentMap') || '#include <map_fragment>') + '\\n\\n    #include <color_fragment>\\n    #include <alphamap_fragment>\\n    #include <alphatest_fragment>\\n    #include <specularmap_fragment>\\n    #include <normal_fragment_begin>\\n    #include <normal_fragment_maps>\\n\\n    ' + this.stringifyChunk('fragmentEmissive') + '\\n\\n    #include <emissivemap_fragment>\\n\\n    // accumulation\\n    #include <lights_phong_fragment>\\n    ' + this.stringifyChunk('fragmentSpecular') + '\\n    #include <lights_fragment_begin>\\n    #include <lights_fragment_maps>\\n    #include <lights_fragment_end>\\n\\n    // modulation\\n    #include <aomap_fragment>\\n\\n    vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\n    #include <envmap_fragment>\\n\\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\n    #include <tonemapping_fragment>\\n    #include <encodings_fragment>\\n    #include <fog_fragment>\\n    #include <premultiplied_alpha_fragment>\\n    #include <dithering_fragment>\\n\\n  }';\n};\n\n/**\n * Extends THREE.MeshStandardMaterial with custom shader chunks.\n *\n * @see http://three-bas-examples.surge.sh/examples/materials_standard/\n *\n * @param {Object} parameters Object containing material properties and custom shader chunks.\n * @constructor\n */\nfunction StandardAnimationMaterial(parameters) {\n  this.varyingParameters = [];\n\n  this.vertexFunctions = [];\n  this.vertexParameters = [];\n  this.vertexInit = [];\n  this.vertexNormal = [];\n  this.vertexPosition = [];\n  this.vertexColor = [];\n  this.vertexPostMorph = [];\n  this.vertexPostSkinning = [];\n\n  this.fragmentFunctions = [];\n  this.fragmentParameters = [];\n  this.fragmentInit = [];\n  this.fragmentMap = [];\n  this.fragmentDiffuse = [];\n  this.fragmentRoughness = [];\n  this.fragmentMetalness = [];\n  this.fragmentEmissive = [];\n\n  BaseAnimationMaterial.call(this, parameters, ShaderLib['standard'].uniforms);\n\n  this.lights = true;\n  this.vertexShader = this.concatVertexShader();\n  this.fragmentShader = this.concatFragmentShader();\n}\nStandardAnimationMaterial.prototype = Object.create(BaseAnimationMaterial.prototype);\nStandardAnimationMaterial.prototype.constructor = StandardAnimationMaterial;\n\nStandardAnimationMaterial.prototype.concatVertexShader = function () {\n  return '\\n  #define PHYSICAL\\n\\n  varying vec3 vViewPosition;\\n  \\n  #ifndef FLAT_SHADED\\n  \\n    varying vec3 vNormal;\\n  \\n  #endif\\n  \\n  #include <common>\\n  #include <uv_pars_vertex>\\n  #include <uv2_pars_vertex>\\n  #include <displacementmap_pars_vertex>\\n  #include <color_pars_vertex>\\n  #include <fog_pars_vertex>\\n  #include <morphtarget_pars_vertex>\\n  #include <skinning_pars_vertex>\\n  #include <shadowmap_pars_vertex>\\n  #include <logdepthbuf_pars_vertex>\\n  #include <clipping_planes_pars_vertex>\\n  \\n  ' + this.stringifyChunk('vertexParameters') + '\\n  ' + this.stringifyChunk('varyingParameters') + '\\n  ' + this.stringifyChunk('vertexFunctions') + '\\n  \\n  void main() {\\n\\n    ' + this.stringifyChunk('vertexInit') + '\\n\\n    #include <uv_vertex>\\n    #include <uv2_vertex>\\n    #include <color_vertex>\\n  \\n    #include <beginnormal_vertex>\\n    \\n    ' + this.stringifyChunk('vertexNormal') + '\\n    \\n    #include <morphnormal_vertex>\\n    #include <skinbase_vertex>\\n    #include <skinnormal_vertex>\\n    #include <defaultnormal_vertex>\\n  \\n  #ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\\n  \\n    vNormal = normalize( transformedNormal );\\n  \\n  #endif\\n  \\n    #include <begin_vertex>\\n    \\n    ' + this.stringifyChunk('vertexPosition') + '\\n    ' + this.stringifyChunk('vertexColor') + '\\n    \\n    #include <morphtarget_vertex>\\n    \\n    ' + this.stringifyChunk('vertexPostMorph') + '\\n    \\n    #include <skinning_vertex>\\n\\n    ' + this.stringifyChunk('vertexPostSkinning') + '\\n    \\n    #include <displacementmap_vertex>\\n    #include <project_vertex>\\n    #include <logdepthbuf_vertex>\\n    #include <clipping_planes_vertex>\\n  \\n    vViewPosition = - mvPosition.xyz;\\n  \\n    #include <worldpos_vertex>\\n    #include <shadowmap_vertex>\\n    #include <fog_vertex>\\n  }';\n};\n\nStandardAnimationMaterial.prototype.concatFragmentShader = function () {\n  return '\\n  #define PHYSICAL\\n  \\n  uniform vec3 diffuse;\\n  uniform vec3 emissive;\\n  uniform float roughness;\\n  uniform float metalness;\\n  uniform float opacity;\\n  \\n  #ifndef STANDARD\\n    uniform float clearCoat;\\n    uniform float clearCoatRoughness;\\n  #endif\\n  \\n  varying vec3 vViewPosition;\\n  \\n  #ifndef FLAT_SHADED\\n  \\n    varying vec3 vNormal;\\n  \\n  #endif\\n  \\n  #include <common>\\n  #include <packing>\\n  #include <dithering_pars_fragment>\\n  #include <color_pars_fragment>\\n  #include <uv_pars_fragment>\\n  #include <uv2_pars_fragment>\\n  #include <map_pars_fragment>\\n  #include <alphamap_pars_fragment>\\n  #include <aomap_pars_fragment>\\n  #include <lightmap_pars_fragment>\\n  #include <emissivemap_pars_fragment>\\n  #include <envmap_pars_fragment>\\n  #include <fog_pars_fragment>\\n  #include <bsdfs>\\n  #include <cube_uv_reflection_fragment>\\n  #include <lights_pars_begin>\\n  #include <envmap_physical_pars_fragment>\\n  #include <lights_physical_pars_fragment>\\n  #include <shadowmap_pars_fragment>\\n  #include <bumpmap_pars_fragment>\\n  #include <normalmap_pars_fragment>\\n  #include <roughnessmap_pars_fragment>\\n  #include <metalnessmap_pars_fragment>\\n  #include <logdepthbuf_pars_fragment>\\n  #include <clipping_planes_pars_fragment>\\n  \\n  ' + this.stringifyChunk('fragmentParameters') + '\\n  ' + this.stringifyChunk('varyingParameters') + '\\n  ' + this.stringifyChunk('fragmentFunctions') + '\\n  \\n  void main() {\\n  \\n    ' + this.stringifyChunk('fragmentInit') + '\\n  \\n    #include <clipping_planes_fragment>\\n  \\n    vec4 diffuseColor = vec4( diffuse, opacity );\\n    ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n    vec3 totalEmissiveRadiance = emissive;\\n  \\n    ' + this.stringifyChunk('fragmentDiffuse') + '\\n  \\n    #include <logdepthbuf_fragment>\\n\\n    ' + (this.stringifyChunk('fragmentMap') || '#include <map_fragment>') + '\\n\\n    #include <color_fragment>\\n    #include <alphamap_fragment>\\n    #include <alphatest_fragment>\\n    \\n    float roughnessFactor = roughness;\\n    ' + this.stringifyChunk('fragmentRoughness') + '\\n    #ifdef USE_ROUGHNESSMAP\\n    \\n      vec4 texelRoughness = texture2D( roughnessMap, vUv );\\n    \\n      // reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\\n      roughnessFactor *= texelRoughness.g;\\n    \\n    #endif\\n    \\n    float metalnessFactor = metalness;\\n    ' + this.stringifyChunk('fragmentMetalness') + '\\n    #ifdef USE_METALNESSMAP\\n    \\n      vec4 texelMetalness = texture2D( metalnessMap, vUv );\\n      metalnessFactor *= texelMetalness.b;\\n    \\n    #endif\\n    \\n    #include <normal_fragment_begin>\\n    #include <normal_fragment_maps>\\n    \\n    ' + this.stringifyChunk('fragmentEmissive') + '\\n    \\n    #include <emissivemap_fragment>\\n  \\n    // accumulation\\n    #include <lights_physical_fragment>\\n    #include <lights_fragment_begin>\\n    #include <lights_fragment_maps>\\n    #include <lights_fragment_end>\\n  \\n    // modulation\\n    #include <aomap_fragment>\\n  \\n    vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n  \\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n  \\n    #include <tonemapping_fragment>\\n    #include <encodings_fragment>\\n    #include <fog_fragment>\\n    #include <premultiplied_alpha_fragment>\\n    #include <dithering_fragment>\\n  \\n  }';\n};\n\n/**\n * Extends THREE.MeshToonMaterial with custom shader chunks. MeshToonMaterial is mostly the same as MeshPhongMaterial. The only difference is a TOON define, and support for a gradientMap uniform.\n *\n * @param {Object} parameters Object containing material properties and custom shader chunks.\n * @constructor\n */\nfunction ToonAnimationMaterial(parameters) {\n  if (!parameters.defines) {\n    parameters.defines = {};\n  }\n  parameters.defines['TOON'] = '';\n\n  PhongAnimationMaterial.call(this, parameters);\n}\nToonAnimationMaterial.prototype = Object.create(PhongAnimationMaterial.prototype);\nToonAnimationMaterial.prototype.constructor = ToonAnimationMaterial;\n\n/**\n * Extends THREE.PointsMaterial with custom shader chunks.\n *\n * @param {Object} parameters Object containing material properties and custom shader chunks.\n * @constructor\n */\nfunction PointsAnimationMaterial(parameters) {\n  this.varyingParameters = [];\n\n  this.vertexFunctions = [];\n  this.vertexParameters = [];\n  this.vertexInit = [];\n  this.vertexPosition = [];\n  this.vertexColor = [];\n\n  this.fragmentFunctions = [];\n  this.fragmentParameters = [];\n  this.fragmentInit = [];\n  this.fragmentMap = [];\n  this.fragmentDiffuse = [];\n  // use fragment shader to shape to point, reference: https://thebookofshaders.com/07/\n  this.fragmentShape = [];\n\n  BaseAnimationMaterial.call(this, parameters, ShaderLib['points'].uniforms);\n\n  this.vertexShader = this.concatVertexShader();\n  this.fragmentShader = this.concatFragmentShader();\n}\n\nPointsAnimationMaterial.prototype = Object.create(BaseAnimationMaterial.prototype);\nPointsAnimationMaterial.prototype.constructor = PointsAnimationMaterial;\n\nPointsAnimationMaterial.prototype.concatVertexShader = function () {\n  return '\\n  uniform float size;\\n  uniform float scale;\\n  \\n  #include <common>\\n  #include <color_pars_vertex>\\n  #include <fog_pars_vertex>\\n  #include <shadowmap_pars_vertex>\\n  #include <logdepthbuf_pars_vertex>\\n  #include <clipping_planes_pars_vertex>\\n  \\n  ' + this.stringifyChunk('vertexParameters') + '\\n  ' + this.stringifyChunk('varyingParameters') + '\\n  ' + this.stringifyChunk('vertexFunctions') + '\\n  \\n  void main() {\\n  \\n    ' + this.stringifyChunk('vertexInit') + '\\n  \\n    #include <color_vertex>\\n    #include <begin_vertex>\\n    \\n    ' + this.stringifyChunk('vertexPosition') + '\\n    ' + this.stringifyChunk('vertexColor') + '\\n    \\n    #include <project_vertex>\\n  \\n    #ifdef USE_SIZEATTENUATION\\n      gl_PointSize = size * ( scale / - mvPosition.z );\\n    #else\\n      gl_PointSize = size;\\n    #endif\\n  \\n    #include <logdepthbuf_vertex>\\n    #include <clipping_planes_vertex>\\n    #include <worldpos_vertex>\\n    #include <shadowmap_vertex>\\n    #include <fog_vertex>\\n  }';\n};\n\nPointsAnimationMaterial.prototype.concatFragmentShader = function () {\n  return '\\n  uniform vec3 diffuse;\\n  uniform float opacity;\\n  \\n  #include <common>\\n  #include <packing>\\n  #include <color_pars_fragment>\\n  #include <map_particle_pars_fragment>\\n  #include <fog_pars_fragment>\\n  #include <shadowmap_pars_fragment>\\n  #include <logdepthbuf_pars_fragment>\\n  #include <clipping_planes_pars_fragment>\\n  \\n  ' + this.stringifyChunk('fragmentParameters') + '\\n  ' + this.stringifyChunk('varyingParameters') + '\\n  ' + this.stringifyChunk('fragmentFunctions') + '\\n  \\n  void main() {\\n  \\n    ' + this.stringifyChunk('fragmentInit') + '\\n  \\n    #include <clipping_planes_fragment>\\n  \\n    vec3 outgoingLight = vec3( 0.0 );\\n    vec4 diffuseColor = vec4( diffuse, opacity );\\n  \\n    ' + this.stringifyChunk('fragmentDiffuse') + '\\n  \\n    #include <logdepthbuf_fragment>\\n\\n    ' + (this.stringifyChunk('fragmentMap') || '#include <map_particle_fragment>') + '\\n\\n    #include <color_fragment>\\n    #include <alphatest_fragment>\\n  \\n    outgoingLight = diffuseColor.rgb;\\n  \\n    gl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n    \\n    ' + this.stringifyChunk('fragmentShape') + '\\n  \\n    #include <premultiplied_alpha_fragment>\\n    #include <tonemapping_fragment>\\n    #include <encodings_fragment>\\n    #include <fog_fragment>\\n  }';\n};\n\nfunction DepthAnimationMaterial(parameters) {\n  this.depthPacking = RGBADepthPacking;\n  this.clipping = true;\n\n  this.vertexFunctions = [];\n  this.vertexParameters = [];\n  this.vertexInit = [];\n  this.vertexPosition = [];\n  this.vertexPostMorph = [];\n  this.vertexPostSkinning = [];\n\n  BaseAnimationMaterial.call(this, parameters);\n\n  this.uniforms = UniformsUtils.merge([ShaderLib['depth'].uniforms, this.uniforms]);\n  this.vertexShader = this.concatVertexShader();\n  this.fragmentShader = ShaderLib['depth'].fragmentShader;\n}\nDepthAnimationMaterial.prototype = Object.create(BaseAnimationMaterial.prototype);\nDepthAnimationMaterial.prototype.constructor = DepthAnimationMaterial;\n\nDepthAnimationMaterial.prototype.concatVertexShader = function () {\n\n  return '\\n  #include <common>\\n  #include <uv_pars_vertex>\\n  #include <displacementmap_pars_vertex>\\n  #include <morphtarget_pars_vertex>\\n  #include <skinning_pars_vertex>\\n  #include <logdepthbuf_pars_vertex>\\n  #include <clipping_planes_pars_vertex>\\n  \\n  ' + this.stringifyChunk('vertexParameters') + '\\n  ' + this.stringifyChunk('vertexFunctions') + '\\n  \\n  void main() {\\n  \\n    ' + this.stringifyChunk('vertexInit') + '\\n  \\n    #include <uv_vertex>\\n  \\n    #include <skinbase_vertex>\\n  \\n    #ifdef USE_DISPLACEMENTMAP\\n  \\n      #include <beginnormal_vertex>\\n      #include <morphnormal_vertex>\\n      #include <skinnormal_vertex>\\n  \\n    #endif\\n  \\n    #include <begin_vertex>\\n    \\n    ' + this.stringifyChunk('vertexPosition') + '\\n\\n    #include <morphtarget_vertex>\\n    \\n    ' + this.stringifyChunk('vertexPostMorph') + '\\n    \\n    #include <skinning_vertex>\\n\\n    ' + this.stringifyChunk('vertexPostSkinning') + '\\n    \\n    #include <displacementmap_vertex>\\n    #include <project_vertex>\\n    #include <logdepthbuf_vertex>\\n    #include <clipping_planes_vertex>\\n  }';\n};\n\nfunction DistanceAnimationMaterial(parameters) {\n  this.depthPacking = RGBADepthPacking;\n  this.clipping = true;\n\n  this.vertexFunctions = [];\n  this.vertexParameters = [];\n  this.vertexInit = [];\n  this.vertexPosition = [];\n  this.vertexPostMorph = [];\n  this.vertexPostSkinning = [];\n\n  BaseAnimationMaterial.call(this, parameters);\n\n  this.uniforms = UniformsUtils.merge([ShaderLib['distanceRGBA'].uniforms, this.uniforms]);\n  this.vertexShader = this.concatVertexShader();\n  this.fragmentShader = ShaderLib['distanceRGBA'].fragmentShader;\n}\nDistanceAnimationMaterial.prototype = Object.create(BaseAnimationMaterial.prototype);\nDistanceAnimationMaterial.prototype.constructor = DistanceAnimationMaterial;\n\nDistanceAnimationMaterial.prototype.concatVertexShader = function () {\n  return '\\n  #define DISTANCE\\n\\n  varying vec3 vWorldPosition;\\n  \\n  #include <common>\\n  #include <uv_pars_vertex>\\n  #include <displacementmap_pars_vertex>\\n  #include <morphtarget_pars_vertex>\\n  #include <skinning_pars_vertex>\\n  #include <clipping_planes_pars_vertex>\\n  \\n  ' + this.stringifyChunk('vertexParameters') + '\\n  ' + this.stringifyChunk('vertexFunctions') + '\\n  \\n  void main() {\\n\\n    ' + this.stringifyChunk('vertexInit') + '\\n  \\n    #include <uv_vertex>\\n  \\n    #include <skinbase_vertex>\\n  \\n    #ifdef USE_DISPLACEMENTMAP\\n  \\n      #include <beginnormal_vertex>\\n      #include <morphnormal_vertex>\\n      #include <skinnormal_vertex>\\n  \\n    #endif\\n  \\n    #include <begin_vertex>\\n    \\n    ' + this.stringifyChunk('vertexPosition') + '\\n\\n    #include <morphtarget_vertex>\\n    \\n    ' + this.stringifyChunk('vertexPostMorph') + '\\n    \\n    #include <skinning_vertex>\\n\\n    ' + this.stringifyChunk('vertexPostSkinning') + '\\n    \\n    #include <displacementmap_vertex>\\n    #include <project_vertex>\\n    #include <worldpos_vertex>\\n    #include <clipping_planes_vertex>\\n  \\n    vWorldPosition = worldPosition.xyz;\\n  \\n  }';\n};\n\n/**\n * A BufferGeometry where a 'prefab' geometry is repeated a number of times.\n *\n * @param {Geometry|BufferGeometry} prefab The Geometry instance to repeat.\n * @param {Number} count The number of times to repeat the geometry.\n * @constructor\n */\nfunction PrefabBufferGeometry(prefab, count) {\n  BufferGeometry.call(this);\n\n  /**\n   * A reference to the prefab geometry used to create this instance.\n   * @type {Geometry|BufferGeometry}\n   */\n  this.prefabGeometry = prefab;\n  this.isPrefabBufferGeometry = prefab.isBufferGeometry;\n\n  /**\n   * Number of prefabs.\n   * @type {Number}\n   */\n  this.prefabCount = count;\n\n  /**\n   * Number of vertices of the prefab.\n   * @type {Number}\n   */\n  if (this.isPrefabBufferGeometry) {\n    this.prefabVertexCount = prefab.attributes.position.count;\n  } else {\n    this.prefabVertexCount = prefab.vertices.length;\n  }\n\n  this.bufferIndices();\n  this.bufferPositions();\n}\nPrefabBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nPrefabBufferGeometry.prototype.constructor = PrefabBufferGeometry;\n\nPrefabBufferGeometry.prototype.bufferIndices = function () {\n  var prefabIndices = [];\n  var prefabIndexCount = void 0;\n\n  if (this.isPrefabBufferGeometry) {\n    if (this.prefabGeometry.index) {\n      prefabIndexCount = this.prefabGeometry.index.count;\n      prefabIndices = this.prefabGeometry.index.array;\n    } else {\n      prefabIndexCount = this.prefabVertexCount;\n\n      for (var i = 0; i < prefabIndexCount; i++) {\n        prefabIndices.push(i);\n      }\n    }\n  } else {\n    var prefabFaceCount = this.prefabGeometry.faces.length;\n    prefabIndexCount = prefabFaceCount * 3;\n\n    for (var _i = 0; _i < prefabFaceCount; _i++) {\n      var face = this.prefabGeometry.faces[_i];\n      prefabIndices.push(face.a, face.b, face.c);\n    }\n  }\n\n  var indexBuffer = new Uint32Array(this.prefabCount * prefabIndexCount);\n\n  this.setIndex(new BufferAttribute(indexBuffer, 1));\n\n  for (var _i2 = 0; _i2 < this.prefabCount; _i2++) {\n    for (var k = 0; k < prefabIndexCount; k++) {\n      indexBuffer[_i2 * prefabIndexCount + k] = prefabIndices[k] + _i2 * this.prefabVertexCount;\n    }\n  }\n};\n\nPrefabBufferGeometry.prototype.bufferPositions = function () {\n  var positionBuffer = this.createAttribute('position', 3).array;\n\n  if (this.isPrefabBufferGeometry) {\n    var positions = this.prefabGeometry.attributes.position.array;\n\n    for (var i = 0, offset = 0; i < this.prefabCount; i++) {\n      for (var j = 0; j < this.prefabVertexCount; j++, offset += 3) {\n        positionBuffer[offset] = positions[j * 3];\n        positionBuffer[offset + 1] = positions[j * 3 + 1];\n        positionBuffer[offset + 2] = positions[j * 3 + 2];\n      }\n    }\n  } else {\n    for (var _i3 = 0, _offset = 0; _i3 < this.prefabCount; _i3++) {\n      for (var _j = 0; _j < this.prefabVertexCount; _j++, _offset += 3) {\n        var prefabVertex = this.prefabGeometry.vertices[_j];\n\n        positionBuffer[_offset] = prefabVertex.x;\n        positionBuffer[_offset + 1] = prefabVertex.y;\n        positionBuffer[_offset + 2] = prefabVertex.z;\n      }\n    }\n  }\n};\n\n/**\n * Creates a BufferAttribute with UV coordinates.\n */\nPrefabBufferGeometry.prototype.bufferUvs = function () {\n  var uvBuffer = this.createAttribute('uv', 2).array;\n\n  if (this.isPrefabBufferGeometry) {\n    var uvs = this.prefabGeometry.attributes.uv.array;\n\n    for (var i = 0, offset = 0; i < this.prefabCount; i++) {\n      for (var j = 0; j < this.prefabVertexCount; j++, offset += 2) {\n        uvBuffer[offset] = uvs[j * 2];\n        uvBuffer[offset + 1] = uvs[j * 2 + 1];\n      }\n    }\n  } else {\n    var prefabFaceCount = this.prefabGeometry.faces.length;\n    var _uvs = [];\n\n    for (var _i4 = 0; _i4 < prefabFaceCount; _i4++) {\n      var face = this.prefabGeometry.faces[_i4];\n      var uv = this.prefabGeometry.faceVertexUvs[0][_i4];\n\n      _uvs[face.a] = uv[0];\n      _uvs[face.b] = uv[1];\n      _uvs[face.c] = uv[2];\n    }\n\n    for (var _i5 = 0, _offset2 = 0; _i5 < this.prefabCount; _i5++) {\n      for (var _j2 = 0; _j2 < this.prefabVertexCount; _j2++, _offset2 += 2) {\n        var _uv = _uvs[_j2];\n\n        uvBuffer[_offset2] = _uv.x;\n        uvBuffer[_offset2 + 1] = _uv.y;\n      }\n    }\n  }\n};\n\n/**\n * Creates a BufferAttribute on this geometry instance.\n *\n * @param {String} name Name of the attribute.\n * @param {Number} itemSize Number of floats per vertex (typically 1, 2, 3 or 4).\n * @param {function=} factory Function that will be called for each prefab upon creation. Accepts 3 arguments: data[], index and prefabCount. Calls setPrefabData.\n *\n * @returns {BufferAttribute}\n */\nPrefabBufferGeometry.prototype.createAttribute = function (name, itemSize, factory) {\n  var buffer = new Float32Array(this.prefabCount * this.prefabVertexCount * itemSize);\n  var attribute = new BufferAttribute(buffer, itemSize);\n\n  this.addAttribute(name, attribute);\n\n  if (factory) {\n    var data = [];\n\n    for (var i = 0; i < this.prefabCount; i++) {\n      factory(data, i, this.prefabCount);\n      this.setPrefabData(attribute, i, data);\n    }\n  }\n\n  return attribute;\n};\n\n/**\n * Sets data for all vertices of a prefab at a given index.\n * Usually called in a loop.\n *\n * @param {String|BufferAttribute} attribute The attribute or attribute name where the data is to be stored.\n * @param {Number} prefabIndex Index of the prefab in the buffer geometry.\n * @param {Array} data Array of data. Length should be equal to item size of the attribute.\n */\nPrefabBufferGeometry.prototype.setPrefabData = function (attribute, prefabIndex, data) {\n  attribute = typeof attribute === 'string' ? this.attributes[attribute] : attribute;\n\n  var offset = prefabIndex * this.prefabVertexCount * attribute.itemSize;\n\n  for (var i = 0; i < this.prefabVertexCount; i++) {\n    for (var j = 0; j < attribute.itemSize; j++) {\n      attribute.array[offset++] = data[j];\n    }\n  }\n};\n\n/**\n * A BufferGeometry where a 'prefab' geometry array is repeated a number of times.\n *\n * @param {Array} prefabs An array with Geometry instances to repeat.\n * @param {Number} repeatCount The number of times to repeat the array of Geometries.\n * @constructor\n */\nfunction MultiPrefabBufferGeometry(prefabs, repeatCount) {\n  BufferGeometry.call(this);\n\n  if (Array.isArray(prefabs)) {\n    this.prefabGeometries = prefabs;\n  } else {\n    this.prefabGeometries = [prefabs];\n  }\n\n  this.prefabGeometriesCount = this.prefabGeometries.length;\n\n  /**\n   * Number of prefabs.\n   * @type {Number}\n   */\n  this.prefabCount = repeatCount * this.prefabGeometriesCount;\n  /**\n   * How often the prefab array is repeated.\n   * @type {Number}\n   */\n  this.repeatCount = repeatCount;\n\n  /**\n   * Array of vertex counts per prefab.\n   * @type {Array}\n   */\n  this.prefabVertexCounts = this.prefabGeometries.map(function (p) {\n    return p.isBufferGeometry ? p.attributes.position.count : p.vertices.length;\n  });\n  /**\n   * Total number of vertices for one repetition of the prefabs\n   * @type {number}\n   */\n  this.repeatVertexCount = this.prefabVertexCounts.reduce(function (r, v) {\n    return r + v;\n  }, 0);\n\n  this.bufferIndices();\n  this.bufferPositions();\n}\nMultiPrefabBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nMultiPrefabBufferGeometry.prototype.constructor = MultiPrefabBufferGeometry;\n\nMultiPrefabBufferGeometry.prototype.bufferIndices = function () {\n  var repeatIndexCount = 0;\n\n  this.prefabIndices = this.prefabGeometries.map(function (geometry) {\n    var indices = [];\n\n    if (geometry.isBufferGeometry) {\n      if (geometry.index) {\n        indices = geometry.index.array;\n      } else {\n        for (var i = 0; i < geometry.attributes.position.count; i++) {\n          indices.push(i);\n        }\n      }\n    } else {\n      for (var _i = 0; _i < geometry.faces.length; _i++) {\n        var face = geometry.faces[_i];\n        indices.push(face.a, face.b, face.c);\n      }\n    }\n\n    repeatIndexCount += indices.length;\n\n    return indices;\n  });\n\n  var indexBuffer = new Uint32Array(repeatIndexCount * this.repeatCount);\n  var indexOffset = 0;\n  var prefabOffset = 0;\n\n  for (var i = 0; i < this.prefabCount; i++) {\n    var index = i % this.prefabGeometriesCount;\n    var indices = this.prefabIndices[index];\n    var vertexCount = this.prefabVertexCounts[index];\n\n    for (var j = 0; j < indices.length; j++) {\n      indexBuffer[indexOffset++] = indices[j] + prefabOffset;\n    }\n\n    prefabOffset += vertexCount;\n  }\n\n  this.setIndex(new BufferAttribute(indexBuffer, 1));\n};\n\nMultiPrefabBufferGeometry.prototype.bufferPositions = function () {\n  var _this = this;\n\n  var positionBuffer = this.createAttribute('position', 3).array;\n\n  var prefabPositions = this.prefabGeometries.map(function (geometry, i) {\n    var positions = void 0;\n\n    if (geometry.isBufferGeometry) {\n      positions = geometry.attributes.position.array;\n    } else {\n\n      var vertexCount = _this.prefabVertexCounts[i];\n\n      positions = [];\n\n      for (var j = 0, offset = 0; j < vertexCount; j++) {\n        var prefabVertex = geometry.vertices[j];\n\n        positions[offset++] = prefabVertex.x;\n        positions[offset++] = prefabVertex.y;\n        positions[offset++] = prefabVertex.z;\n      }\n    }\n\n    return positions;\n  });\n\n  for (var i = 0, offset = 0; i < this.prefabCount; i++) {\n    var index = i % this.prefabGeometries.length;\n    var vertexCount = this.prefabVertexCounts[index];\n    var positions = prefabPositions[index];\n\n    for (var j = 0; j < vertexCount; j++) {\n      positionBuffer[offset++] = positions[j * 3];\n      positionBuffer[offset++] = positions[j * 3 + 1];\n      positionBuffer[offset++] = positions[j * 3 + 2];\n    }\n  }\n};\n\n/**\n * Creates a BufferAttribute with UV coordinates.\n */\nMultiPrefabBufferGeometry.prototype.bufferUvs = function () {\n  var _this2 = this;\n\n  var uvBuffer = this.createAttribute('uv', 2).array;\n\n  var prefabUvs = this.prefabGeometries.map(function (geometry, i) {\n    var uvs = void 0;\n\n    if (geometry.isBufferGeometry) {\n      if (!geometry.attributes.uv) {\n        console.error('No UV found in prefab geometry', geometry);\n      }\n\n      uvs = geometry.attributes.uv.array;\n    } else {\n      var prefabFaceCount = _this2.prefabIndices[i].length / 3;\n      var uvObjects = [];\n\n      for (var j = 0; j < prefabFaceCount; j++) {\n        var face = geometry.faces[j];\n        var uv = geometry.faceVertexUvs[0][j];\n\n        uvObjects[face.a] = uv[0];\n        uvObjects[face.b] = uv[1];\n        uvObjects[face.c] = uv[2];\n      }\n\n      uvs = [];\n\n      for (var k = 0; k < uvObjects.length; k++) {\n        uvs[k * 2] = uvObjects[k].x;\n        uvs[k * 2 + 1] = uvObjects[k].y;\n      }\n    }\n\n    return uvs;\n  });\n\n  for (var i = 0, offset = 0; i < this.prefabCount; i++) {\n\n    var index = i % this.prefabGeometries.length;\n    var vertexCount = this.prefabVertexCounts[index];\n    var uvs = prefabUvs[index];\n\n    for (var j = 0; j < vertexCount; j++) {\n      uvBuffer[offset++] = uvs[j * 2];\n      uvBuffer[offset++] = uvs[j * 2 + 1];\n    }\n  }\n};\n\n/**\n * Creates a BufferAttribute on this geometry instance.\n *\n * @param {String} name Name of the attribute.\n * @param {Number} itemSize Number of floats per vertex (typically 1, 2, 3 or 4).\n * @param {function=} factory Function that will be called for each prefab upon creation. Accepts 3 arguments: data[], index and prefabCount. Calls setPrefabData.\n *\n * @returns {BufferAttribute}\n */\nMultiPrefabBufferGeometry.prototype.createAttribute = function (name, itemSize, factory) {\n  var buffer = new Float32Array(this.repeatCount * this.repeatVertexCount * itemSize);\n  var attribute = new BufferAttribute(buffer, itemSize);\n\n  this.addAttribute(name, attribute);\n\n  if (factory) {\n    var data = [];\n\n    for (var i = 0; i < this.prefabCount; i++) {\n      factory(data, i, this.prefabCount);\n      this.setPrefabData(attribute, i, data);\n    }\n  }\n\n  return attribute;\n};\n\n/**\n * Sets data for all vertices of a prefab at a given index.\n * Usually called in a loop.\n *\n * @param {String|BufferAttribute} attribute The attribute or attribute name where the data is to be stored.\n * @param {Number} prefabIndex Index of the prefab in the buffer geometry.\n * @param {Array} data Array of data. Length should be equal to item size of the attribute.\n */\nMultiPrefabBufferGeometry.prototype.setPrefabData = function (attribute, prefabIndex, data) {\n  attribute = typeof attribute === 'string' ? this.attributes[attribute] : attribute;\n\n  var prefabGeometryIndex = prefabIndex % this.prefabGeometriesCount;\n  var prefabGeometryVertexCount = this.prefabVertexCounts[prefabGeometryIndex];\n  var whole = (prefabIndex / this.prefabGeometriesCount | 0) * this.prefabGeometriesCount;\n  var wholeOffset = whole * this.repeatVertexCount;\n  var part = prefabIndex - whole;\n  var partOffset = 0;\n  var i = 0;\n\n  while (i < part) {\n    partOffset += this.prefabVertexCounts[i++];\n  }\n\n  var offset = (wholeOffset + partOffset) * attribute.itemSize;\n\n  for (var _i2 = 0; _i2 < prefabGeometryVertexCount; _i2++) {\n    for (var j = 0; j < attribute.itemSize; j++) {\n      attribute.array[offset++] = data[j];\n    }\n  }\n};\n\n/**\n * A wrapper around THREE.InstancedBufferGeometry, which is more memory efficient than PrefabBufferGeometry, but requires the ANGLE_instanced_arrays extension.\n *\n * @param {BufferGeometry} prefab The Geometry instance to repeat.\n * @param {Number} count The number of times to repeat the geometry.\n *\n * @constructor\n */\nfunction InstancedPrefabBufferGeometry(prefab, count) {\n  if (prefab.isGeometry === true) {\n    console.error('InstancedPrefabBufferGeometry prefab must be a BufferGeometry.');\n  }\n\n  InstancedBufferGeometry.call(this);\n\n  this.prefabGeometry = prefab;\n  this.copy(prefab);\n\n  this.maxInstancedCount = count;\n  this.prefabCount = count;\n}\nInstancedPrefabBufferGeometry.prototype = Object.create(InstancedBufferGeometry.prototype);\nInstancedPrefabBufferGeometry.prototype.constructor = InstancedPrefabBufferGeometry;\n\n/**\n * Creates a BufferAttribute on this geometry instance.\n *\n * @param {String} name Name of the attribute.\n * @param {Number} itemSize Number of floats per vertex (typically 1, 2, 3 or 4).\n * @param {function=} factory Function that will be called for each prefab upon creation. Accepts 3 arguments: data[], index and prefabCount. Calls setPrefabData.\n *\n * @returns {BufferAttribute}\n */\nInstancedPrefabBufferGeometry.prototype.createAttribute = function (name, itemSize, factory) {\n  var buffer = new Float32Array(this.prefabCount * itemSize);\n  var attribute = new InstancedBufferAttribute(buffer, itemSize);\n\n  this.addAttribute(name, attribute);\n\n  if (factory) {\n    var data = [];\n\n    for (var i = 0; i < this.prefabCount; i++) {\n      factory(data, i, this.prefabCount);\n      this.setPrefabData(attribute, i, data);\n    }\n  }\n\n  return attribute;\n};\n\n/**\n * Sets data for a prefab at a given index.\n * Usually called in a loop.\n *\n * @param {String|BufferAttribute} attribute The attribute or attribute name where the data is to be stored.\n * @param {Number} prefabIndex Index of the prefab in the buffer geometry.\n * @param {Array} data Array of data. Length should be equal to item size of the attribute.\n */\nInstancedPrefabBufferGeometry.prototype.setPrefabData = function (attribute, prefabIndex, data) {\n  attribute = typeof attribute === 'string' ? this.attributes[attribute] : attribute;\n\n  var offset = prefabIndex * attribute.itemSize;\n\n  for (var j = 0; j < attribute.itemSize; j++) {\n    attribute.array[offset++] = data[j];\n  }\n};\n\n/**\n * Collection of utility functions.\n * @namespace\n */\nvar Utils = {\n  /**\n   * Duplicates vertices so each face becomes separate.\n   * Same as THREE.ExplodeModifier.\n   *\n   * @param {THREE.Geometry} geometry Geometry instance to modify.\n   */\n  separateFaces: function separateFaces(geometry) {\n    var vertices = [];\n\n    for (var i = 0, il = geometry.faces.length; i < il; i++) {\n      var n = vertices.length;\n      var face = geometry.faces[i];\n\n      var a = face.a;\n      var b = face.b;\n      var c = face.c;\n\n      var va = geometry.vertices[a];\n      var vb = geometry.vertices[b];\n      var vc = geometry.vertices[c];\n\n      vertices.push(va.clone());\n      vertices.push(vb.clone());\n      vertices.push(vc.clone());\n\n      face.a = n;\n      face.b = n + 1;\n      face.c = n + 2;\n    }\n\n    geometry.vertices = vertices;\n  },\n\n  /**\n   * Compute the centroid (center) of a THREE.Face3.\n   *\n   * @param {THREE.Geometry} geometry Geometry instance the face is in.\n   * @param {THREE.Face3} face Face object from the THREE.Geometry.faces array\n   * @param {THREE.Vector3=} v Optional vector to store result in.\n   * @returns {THREE.Vector3}\n   */\n  computeCentroid: function computeCentroid(geometry, face, v) {\n    var a = geometry.vertices[face.a];\n    var b = geometry.vertices[face.b];\n    var c = geometry.vertices[face.c];\n\n    v = v || new Vector3();\n\n    v.x = (a.x + b.x + c.x) / 3;\n    v.y = (a.y + b.y + c.y) / 3;\n    v.z = (a.z + b.z + c.z) / 3;\n\n    return v;\n  },\n\n  /**\n   * Get a random vector between box.min and box.max.\n   *\n   * @param {THREE.Box3} box THREE.Box3 instance.\n   * @param {THREE.Vector3=} v Optional vector to store result in.\n   * @returns {THREE.Vector3}\n   */\n  randomInBox: function randomInBox(box, v) {\n    v = v || new Vector3();\n\n    v.x = Math$1.randFloat(box.min.x, box.max.x);\n    v.y = Math$1.randFloat(box.min.y, box.max.y);\n    v.z = Math$1.randFloat(box.min.z, box.max.z);\n\n    return v;\n  },\n\n  /**\n   * Get a random axis for quaternion rotation.\n   *\n   * @param {THREE.Vector3=} v Option vector to store result in.\n   * @returns {THREE.Vector3}\n   */\n  randomAxis: function randomAxis(v) {\n    v = v || new Vector3();\n\n    v.x = Math$1.randFloatSpread(2.0);\n    v.y = Math$1.randFloatSpread(2.0);\n    v.z = Math$1.randFloatSpread(2.0);\n    v.normalize();\n\n    return v;\n  },\n\n  /**\n   * Create a THREE.BAS.DepthAnimationMaterial for shadows from a THREE.SpotLight or THREE.DirectionalLight by copying relevant shader chunks.\n   * Uniform values must be manually synced between the source material and the depth material.\n   *\n   * @see {@link http://three-bas-examples.surge.sh/examples/shadows/}\n   *\n   * @param {THREE.BAS.BaseAnimationMaterial} sourceMaterial Instance to get the shader chunks from.\n   * @returns {THREE.BAS.DepthAnimationMaterial}\n   */\n  createDepthAnimationMaterial: function createDepthAnimationMaterial(sourceMaterial) {\n    return new DepthAnimationMaterial({\n      uniforms: sourceMaterial.uniforms,\n      defines: sourceMaterial.defines,\n      vertexFunctions: sourceMaterial.vertexFunctions,\n      vertexParameters: sourceMaterial.vertexParameters,\n      vertexInit: sourceMaterial.vertexInit,\n      vertexPosition: sourceMaterial.vertexPosition\n    });\n  },\n\n  /**\n   * Create a THREE.BAS.DistanceAnimationMaterial for shadows from a THREE.PointLight by copying relevant shader chunks.\n   * Uniform values must be manually synced between the source material and the distance material.\n   *\n   * @see {@link http://three-bas-examples.surge.sh/examples/shadows/}\n   *\n   * @param {THREE.BAS.BaseAnimationMaterial} sourceMaterial Instance to get the shader chunks from.\n   * @returns {THREE.BAS.DistanceAnimationMaterial}\n   */\n  createDistanceAnimationMaterial: function createDistanceAnimationMaterial(sourceMaterial) {\n    return new DistanceAnimationMaterial({\n      uniforms: sourceMaterial.uniforms,\n      defines: sourceMaterial.defines,\n      vertexFunctions: sourceMaterial.vertexFunctions,\n      vertexParameters: sourceMaterial.vertexParameters,\n      vertexInit: sourceMaterial.vertexInit,\n      vertexPosition: sourceMaterial.vertexPosition\n    });\n  }\n};\n\n/**\n * A THREE.BufferGeometry for animating individual faces of a THREE.Geometry.\n *\n * @param {THREE.Geometry} model The THREE.Geometry to base this geometry on.\n * @param {Object=} options\n * @param {Boolean=} options.computeCentroids If true, a centroids will be computed for each face and stored in THREE.BAS.ModelBufferGeometry.centroids.\n * @param {Boolean=} options.localizeFaces If true, the positions for each face will be stored relative to the centroid. This is useful if you want to rotate or scale faces around their center.\n * @constructor\n */\nfunction ModelBufferGeometry(model, options) {\n  BufferGeometry.call(this);\n\n  /**\n   * A reference to the geometry used to create this instance.\n   * @type {THREE.Geometry}\n   */\n  this.modelGeometry = model;\n\n  /**\n   * Number of faces of the model.\n   * @type {Number}\n   */\n  this.faceCount = this.modelGeometry.faces.length;\n\n  /**\n   * Number of vertices of the model.\n   * @type {Number}\n   */\n  this.vertexCount = this.modelGeometry.vertices.length;\n\n  options = options || {};\n  options.computeCentroids && this.computeCentroids();\n\n  this.bufferIndices();\n  this.bufferPositions(options.localizeFaces);\n}\nModelBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nModelBufferGeometry.prototype.constructor = ModelBufferGeometry;\n\n/**\n * Computes a centroid for each face and stores it in THREE.BAS.ModelBufferGeometry.centroids.\n */\nModelBufferGeometry.prototype.computeCentroids = function () {\n  /**\n   * An array of centroids corresponding to the faces of the model.\n   *\n   * @type {Array}\n   */\n  this.centroids = [];\n\n  for (var i = 0; i < this.faceCount; i++) {\n    this.centroids[i] = Utils.computeCentroid(this.modelGeometry, this.modelGeometry.faces[i]);\n  }\n};\n\nModelBufferGeometry.prototype.bufferIndices = function () {\n  var indexBuffer = new Uint32Array(this.faceCount * 3);\n\n  this.setIndex(new BufferAttribute(indexBuffer, 1));\n\n  for (var i = 0, offset = 0; i < this.faceCount; i++, offset += 3) {\n    var face = this.modelGeometry.faces[i];\n\n    indexBuffer[offset] = face.a;\n    indexBuffer[offset + 1] = face.b;\n    indexBuffer[offset + 2] = face.c;\n  }\n};\n\nModelBufferGeometry.prototype.bufferPositions = function (localizeFaces) {\n  var positionBuffer = this.createAttribute('position', 3).array;\n  var i = void 0,\n      offset = void 0;\n\n  if (localizeFaces === true) {\n    for (i = 0; i < this.faceCount; i++) {\n      var face = this.modelGeometry.faces[i];\n      var centroid = this.centroids ? this.centroids[i] : Utils.computeCentroid(this.modelGeometry, face);\n\n      var a = this.modelGeometry.vertices[face.a];\n      var b = this.modelGeometry.vertices[face.b];\n      var c = this.modelGeometry.vertices[face.c];\n\n      positionBuffer[face.a * 3] = a.x - centroid.x;\n      positionBuffer[face.a * 3 + 1] = a.y - centroid.y;\n      positionBuffer[face.a * 3 + 2] = a.z - centroid.z;\n\n      positionBuffer[face.b * 3] = b.x - centroid.x;\n      positionBuffer[face.b * 3 + 1] = b.y - centroid.y;\n      positionBuffer[face.b * 3 + 2] = b.z - centroid.z;\n\n      positionBuffer[face.c * 3] = c.x - centroid.x;\n      positionBuffer[face.c * 3 + 1] = c.y - centroid.y;\n      positionBuffer[face.c * 3 + 2] = c.z - centroid.z;\n    }\n  } else {\n    for (i = 0, offset = 0; i < this.vertexCount; i++, offset += 3) {\n      var vertex = this.modelGeometry.vertices[i];\n\n      positionBuffer[offset] = vertex.x;\n      positionBuffer[offset + 1] = vertex.y;\n      positionBuffer[offset + 2] = vertex.z;\n    }\n  }\n};\n\n/**\n * Creates a THREE.BufferAttribute with UV coordinates.\n */\nModelBufferGeometry.prototype.bufferUvs = function () {\n  var uvBuffer = this.createAttribute('uv', 2).array;\n\n  for (var i = 0; i < this.faceCount; i++) {\n\n    var face = this.modelGeometry.faces[i];\n    var uv = void 0;\n\n    uv = this.modelGeometry.faceVertexUvs[0][i][0];\n    uvBuffer[face.a * 2] = uv.x;\n    uvBuffer[face.a * 2 + 1] = uv.y;\n\n    uv = this.modelGeometry.faceVertexUvs[0][i][1];\n    uvBuffer[face.b * 2] = uv.x;\n    uvBuffer[face.b * 2 + 1] = uv.y;\n\n    uv = this.modelGeometry.faceVertexUvs[0][i][2];\n    uvBuffer[face.c * 2] = uv.x;\n    uvBuffer[face.c * 2 + 1] = uv.y;\n  }\n};\n\n/**\n * Creates two THREE.BufferAttributes: skinIndex and skinWeight. Both are required for skinning.\n */\nModelBufferGeometry.prototype.bufferSkinning = function () {\n  var skinIndexBuffer = this.createAttribute('skinIndex', 4).array;\n  var skinWeightBuffer = this.createAttribute('skinWeight', 4).array;\n\n  for (var i = 0; i < this.vertexCount; i++) {\n    var skinIndex = this.modelGeometry.skinIndices[i];\n    var skinWeight = this.modelGeometry.skinWeights[i];\n\n    skinIndexBuffer[i * 4] = skinIndex.x;\n    skinIndexBuffer[i * 4 + 1] = skinIndex.y;\n    skinIndexBuffer[i * 4 + 2] = skinIndex.z;\n    skinIndexBuffer[i * 4 + 3] = skinIndex.w;\n\n    skinWeightBuffer[i * 4] = skinWeight.x;\n    skinWeightBuffer[i * 4 + 1] = skinWeight.y;\n    skinWeightBuffer[i * 4 + 2] = skinWeight.z;\n    skinWeightBuffer[i * 4 + 3] = skinWeight.w;\n  }\n};\n\n/**\n * Creates a THREE.BufferAttribute on this geometry instance.\n *\n * @param {String} name Name of the attribute.\n * @param {int} itemSize Number of floats per vertex (typically 1, 2, 3 or 4).\n * @param {function=} factory Function that will be called for each face upon creation. Accepts 3 arguments: data[], index and faceCount. Calls setFaceData.\n *\n * @returns {BufferAttribute}\n */\nModelBufferGeometry.prototype.createAttribute = function (name, itemSize, factory) {\n  var buffer = new Float32Array(this.vertexCount * itemSize);\n  var attribute = new BufferAttribute(buffer, itemSize);\n\n  this.addAttribute(name, attribute);\n\n  if (factory) {\n    var data = [];\n\n    for (var i = 0; i < this.faceCount; i++) {\n      factory(data, i, this.faceCount);\n      this.setFaceData(attribute, i, data);\n    }\n  }\n\n  return attribute;\n};\n\n/**\n * Sets data for all vertices of a face at a given index.\n * Usually called in a loop.\n *\n * @param {String|THREE.BufferAttribute} attribute The attribute or attribute name where the data is to be stored.\n * @param {int} faceIndex Index of the face in the buffer geometry.\n * @param {Array} data Array of data. Length should be equal to item size of the attribute.\n */\nModelBufferGeometry.prototype.setFaceData = function (attribute, faceIndex, data) {\n  attribute = typeof attribute === 'string' ? this.attributes[attribute] : attribute;\n\n  var offset = faceIndex * 3 * attribute.itemSize;\n\n  for (var i = 0; i < 3; i++) {\n    for (var j = 0; j < attribute.itemSize; j++) {\n      attribute.array[offset++] = data[j];\n    }\n  }\n};\n\n/**\n * A THREE.BufferGeometry consists of points.\n * @param {Number} count The number of points.\n * @constructor\n */\nfunction PointBufferGeometry(count) {\n  BufferGeometry.call(this);\n\n  /**\n   * Number of points.\n   * @type {Number}\n   */\n  this.pointCount = count;\n\n  this.bufferPositions();\n}\nPointBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nPointBufferGeometry.prototype.constructor = PointBufferGeometry;\n\nPointBufferGeometry.prototype.bufferPositions = function () {\n  this.createAttribute('position', 3);\n};\n\n/**\n * Creates a THREE.BufferAttribute on this geometry instance.\n *\n * @param {String} name Name of the attribute.\n * @param {Number} itemSize Number of floats per vertex (typically 1, 2, 3 or 4).\n * @param {function=} factory Function that will be called for each point upon creation. Accepts 3 arguments: data[], index and prefabCount. Calls setPointData.\n *\n * @returns {THREE.BufferAttribute}\n */\nPointBufferGeometry.prototype.createAttribute = function (name, itemSize, factory) {\n  var buffer = new Float32Array(this.pointCount * itemSize);\n  var attribute = new BufferAttribute(buffer, itemSize);\n\n  this.addAttribute(name, attribute);\n\n  if (factory) {\n    var data = [];\n    for (var i = 0; i < this.pointCount; i++) {\n      factory(data, i, this.pointCount);\n      this.setPointData(attribute, i, data);\n    }\n  }\n\n  return attribute;\n};\n\nPointBufferGeometry.prototype.setPointData = function (attribute, pointIndex, data) {\n  attribute = typeof attribute === 'string' ? this.attributes[attribute] : attribute;\n\n  var offset = pointIndex * attribute.itemSize;\n\n  for (var j = 0; j < attribute.itemSize; j++) {\n    attribute.array[offset++] = data[j];\n  }\n};\n\nvar catmull_rom_spline = \"vec4 catmullRomSpline(vec4 p0, vec4 p1, vec4 p2, vec4 p3, float t, vec2 c) {\\n    vec4 v0 = (p2 - p0) * c.x;\\n    vec4 v1 = (p3 - p1) * c.y;\\n    float t2 = t * t;\\n    float t3 = t * t * t;\\n    return vec4((2.0 * p1 - 2.0 * p2 + v0 + v1) * t3 + (-3.0 * p1 + 3.0 * p2 - 2.0 * v0 - v1) * t2 + v0 * t + p1);\\n}\\nvec4 catmullRomSpline(vec4 p0, vec4 p1, vec4 p2, vec4 p3, float t) {\\n    return catmullRomSpline(p0, p1, p2, p3, t, vec2(0.5, 0.5));\\n}\\nvec3 catmullRomSpline(vec3 p0, vec3 p1, vec3 p2, vec3 p3, float t, vec2 c) {\\n    vec3 v0 = (p2 - p0) * c.x;\\n    vec3 v1 = (p3 - p1) * c.y;\\n    float t2 = t * t;\\n    float t3 = t * t * t;\\n    return vec3((2.0 * p1 - 2.0 * p2 + v0 + v1) * t3 + (-3.0 * p1 + 3.0 * p2 - 2.0 * v0 - v1) * t2 + v0 * t + p1);\\n}\\nvec3 catmullRomSpline(vec3 p0, vec3 p1, vec3 p2, vec3 p3, float t) {\\n    return catmullRomSpline(p0, p1, p2, p3, t, vec2(0.5, 0.5));\\n}\\nvec2 catmullRomSpline(vec2 p0, vec2 p1, vec2 p2, vec2 p3, float t, vec2 c) {\\n    vec2 v0 = (p2 - p0) * c.x;\\n    vec2 v1 = (p3 - p1) * c.y;\\n    float t2 = t * t;\\n    float t3 = t * t * t;\\n    return vec2((2.0 * p1 - 2.0 * p2 + v0 + v1) * t3 + (-3.0 * p1 + 3.0 * p2 - 2.0 * v0 - v1) * t2 + v0 * t + p1);\\n}\\nvec2 catmullRomSpline(vec2 p0, vec2 p1, vec2 p2, vec2 p3, float t) {\\n    return catmullRomSpline(p0, p1, p2, p3, t, vec2(0.5, 0.5));\\n}\\nfloat catmullRomSpline(float p0, float p1, float p2, float p3, float t, vec2 c) {\\n    float v0 = (p2 - p0) * c.x;\\n    float v1 = (p3 - p1) * c.y;\\n    float t2 = t * t;\\n    float t3 = t * t * t;\\n    return float((2.0 * p1 - 2.0 * p2 + v0 + v1) * t3 + (-3.0 * p1 + 3.0 * p2 - 2.0 * v0 - v1) * t2 + v0 * t + p1);\\n}\\nfloat catmullRomSpline(float p0, float p1, float p2, float p3, float t) {\\n    return catmullRomSpline(p0, p1, p2, p3, t, vec2(0.5, 0.5));\\n}\\nivec4 getCatmullRomSplineIndices(float l, float p) {\\n    float index = floor(p);\\n    int i0 = int(max(0.0, index - 1.0));\\n    int i1 = int(index);\\n    int i2 = int(min(index + 1.0, l));\\n    int i3 = int(min(index + 2.0, l));\\n    return ivec4(i0, i1, i2, i3);\\n}\\nivec4 getCatmullRomSplineIndicesClosed(float l, float p) {\\n    float index = floor(p);\\n    int i0 = int(index == 0.0 ? l : index - 1.0);\\n    int i1 = int(index);\\n    int i2 = int(mod(index + 1.0, l));\\n    int i3 = int(mod(index + 2.0, l));\\n    return ivec4(i0, i1, i2, i3);\\n}\\n\";\n\nvar cubic_bezier = \"vec3 cubicBezier(vec3 p0, vec3 c0, vec3 c1, vec3 p1, float t) {\\n    float tn = 1.0 - t;\\n    return tn * tn * tn * p0 + 3.0 * tn * tn * t * c0 + 3.0 * tn * t * t * c1 + t * t * t * p1;\\n}\\nvec2 cubicBezier(vec2 p0, vec2 c0, vec2 c1, vec2 p1, float t) {\\n    float tn = 1.0 - t;\\n    return tn * tn * tn * p0 + 3.0 * tn * tn * t * c0 + 3.0 * tn * t * t * c1 + t * t * t * p1;\\n}\\n\";\n\nvar ease_back_in = \"float easeBackIn(float p, float amplitude) {\\n    return p * p * ((amplitude + 1.0) * p - amplitude);\\n}\\nfloat easeBackIn(float p) {\\n    return easeBackIn(p, 1.70158);\\n}\\nfloat easeBackIn(float t, float b, float c, float d, float amplitude) {\\n    return b + easeBackIn(t / d, amplitude) * c;\\n}\\nfloat easeBackIn(float t, float b, float c, float d) {\\n    return b + easeBackIn(t / d) * c;\\n}\\n\";\n\nvar ease_back_in_out = \"float easeBackInOut(float p, float amplitude) {\\n    amplitude *= 1.525;\\n    return ((p *= 2.0) < 1.0) ? 0.5 * p * p * ((amplitude + 1.0) * p - amplitude) : 0.5 * ((p -= 2.0) * p * ((amplitude + 1.0) * p + amplitude) + 2.0);\\n}\\nfloat easeBackInOut(float p) {\\n    return easeBackInOut(p, 1.70158);\\n}\\nfloat easeBackInOut(float t, float b, float c, float d, float amplitude) {\\n    return b + easeBackInOut(t / d, amplitude) * c;\\n}\\nfloat easeBackInOut(float t, float b, float c, float d) {\\n    return b + easeBackInOut(t / d) * c;\\n}\\n\";\n\nvar ease_back_out = \"float easeBackOut(float p, float amplitude) {\\n    return ((p = p - 1.0) * p * ((amplitude + 1.0) * p + amplitude) + 1.0);\\n}\\nfloat easeBackOut(float p) {\\n    return easeBackOut(p, 1.70158);\\n}\\nfloat easeBackOut(float t, float b, float c, float d, float amplitude) {\\n    return b + easeBackOut(t / d, amplitude) * c;\\n}\\nfloat easeBackOut(float t, float b, float c, float d) {\\n    return b + easeBackOut(t / d) * c;\\n}\\n\";\n\nvar ease_bezier = \"float easeBezier(float p, vec4 curve) {\\n    float ip = 1.0 - p;\\n    return (3.0 * ip * ip * p * curve.xy + 3.0 * ip * p * p * curve.zw + p * p * p).y;\\n}\\nfloat easeBezier(float t, float b, float c, float d, vec4 curve) {\\n    return b + easeBezier(t / d, curve) * c;\\n}\\n\";\n\nvar ease_bounce_in = \"float easeBounceIn(float p) {\\n    if ((p = 1.0 - p) < 1.0 / 2.75) {\\n        return 1.0 - (7.5625 * p * p);\\n    } else if (p < 2.0 / 2.75) {\\n        return 1.0 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);\\n    } else if (p < 2.5 / 2.75) {\\n        return 1.0 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);\\n    }\\n    return 1.0 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);\\n}\\nfloat easeBounceIn(float t, float b, float c, float d) {\\n    return b + easeBounceIn(t / d) * c;\\n}\\n\";\n\nvar ease_bounce_in_out = \"float easeBounceInOut(float p) {\\n    bool invert = (p < 0.5);\\n    p = invert ? (1.0 - (p * 2.0)) : ((p * 2.0) - 1.0);\\n    if (p < 1.0 / 2.75) {\\n        p = 7.5625 * p * p;\\n    } else if (p < 2.0 / 2.75) {\\n        p = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\\n    } else if (p < 2.5 / 2.75) {\\n        p = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\\n    } else {\\n        p = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\\n    }\\n    return invert ? (1.0 - p) * 0.5 : p * 0.5 + 0.5;\\n}\\nfloat easeBounceInOut(float t, float b, float c, float d) {\\n    return b + easeBounceInOut(t / d) * c;\\n}\\n\";\n\nvar ease_bounce_out = \"float easeBounceOut(float p) {\\n    if (p < 1.0 / 2.75) {\\n        return 7.5625 * p * p;\\n    } else if (p < 2.0 / 2.75) {\\n        return 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\\n    } else if (p < 2.5 / 2.75) {\\n        return 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\\n    }\\n    return 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\\n}\\nfloat easeBounceOut(float t, float b, float c, float d) {\\n    return b + easeBounceOut(t / d) * c;\\n}\\n\";\n\nvar ease_circ_in = \"float easeCircIn(float p) {\\n    return -(sqrt(1.0 - p * p) - 1.0);\\n}\\nfloat easeCircIn(float t, float b, float c, float d) {\\n    return b + easeCircIn(t / d) * c;\\n}\\n\";\n\nvar ease_circ_in_out = \"float easeCircInOut(float p) {\\n    return ((p *= 2.0) < 1.0) ? -0.5 * (sqrt(1.0 - p * p) - 1.0) : 0.5 * (sqrt(1.0 - (p -= 2.0) * p) + 1.0);\\n}\\nfloat easeCircInOut(float t, float b, float c, float d) {\\n    return b + easeCircInOut(t / d) * c;\\n}\\n\";\n\nvar ease_circ_out = \"float easeCircOut(float p) {\\n  return sqrt(1.0 - (p = p - 1.0) * p);\\n}\\nfloat easeCircOut(float t, float b, float c, float d) {\\n  return b + easeCircOut(t / d) * c;\\n}\\n\";\n\nvar ease_cubic_in = \"float easeCubicIn(float t) {\\n  return t * t * t;\\n}\\nfloat easeCubicIn(float t, float b, float c, float d) {\\n  return b + easeCubicIn(t / d) * c;\\n}\\n\";\n\nvar ease_cubic_in_out = \"float easeCubicInOut(float t) {\\n  return (t /= 0.5) < 1.0 ? 0.5 * t * t * t : 0.5 * ((t-=2.0) * t * t + 2.0);\\n}\\nfloat easeCubicInOut(float t, float b, float c, float d) {\\n  return b + easeCubicInOut(t / d) * c;\\n}\\n\";\n\nvar ease_cubic_out = \"float easeCubicOut(float t) {\\n  float f = t - 1.0;\\n  return f * f * f + 1.0;\\n}\\nfloat easeCubicOut(float t, float b, float c, float d) {\\n  return b + easeCubicOut(t / d) * c;\\n}\\n\";\n\nvar ease_elastic_in = \"float easeElasticIn(float p, float amplitude, float period) {\\n    float p1 = max(amplitude, 1.0);\\n    float p2 = period / min(amplitude, 1.0);\\n    float p3 = p2 / PI2 * (asin(1.0 / p1));\\n    return -(p1 * pow(2.0, 10.0 * (p -= 1.0)) * sin((p - p3) * PI2 / p2));\\n}\\nfloat easeElasticIn(float p) {\\n    return easeElasticIn(p, 1.0, 0.3);\\n}\\nfloat easeElasticIn(float t, float b, float c, float d, float amplitude, float period) {\\n    return b + easeElasticIn(t / d, amplitude, period) * c;\\n}\\nfloat easeElasticIn(float t, float b, float c, float d) {\\n    return b + easeElasticIn(t / d) * c;\\n}\\n\";\n\nvar ease_elastic_in_out = \"float easeElasticInOut(float p, float amplitude, float period) {\\n    float p1 = max(amplitude, 1.0);\\n    float p2 = period / min(amplitude, 1.0);\\n    float p3 = p2 / PI2 * (asin(1.0 / p1));\\n    return ((p *= 2.0) < 1.0) ? -0.5 * (p1 * pow(2.0, 10.0 * (p -= 1.0)) * sin((p - p3) * PI2 / p2)) : p1 * pow(2.0, -10.0 * (p -= 1.0)) * sin((p - p3) * PI2 / p2) * 0.5 + 1.0;\\n}\\nfloat easeElasticInOut(float p) {\\n    return easeElasticInOut(p, 1.0, 0.3);\\n}\\nfloat easeElasticInOut(float t, float b, float c, float d, float amplitude, float period) {\\n    return b + easeElasticInOut(t / d, amplitude, period) * c;\\n}\\nfloat easeElasticInOut(float t, float b, float c, float d) {\\n    return b + easeElasticInOut(t / d) * c;\\n}\\n\";\n\nvar ease_elastic_out = \"float easeElasticOut(float p, float amplitude, float period) {\\n    float p1 = max(amplitude, 1.0);\\n    float p2 = period / min(amplitude, 1.0);\\n    float p3 = p2 / PI2 * (asin(1.0 / p1));\\n    return p1 * pow(2.0, -10.0 * p) * sin((p - p3) * PI2 / p2) + 1.0;\\n}\\nfloat easeElasticOut(float p) {\\n    return easeElasticOut(p, 1.0, 0.3);\\n}\\nfloat easeElasticOut(float t, float b, float c, float d, float amplitude, float period) {\\n    return b + easeElasticOut(t / d, amplitude, period) * c;\\n}\\nfloat easeElasticOut(float t, float b, float c, float d) {\\n    return b + easeElasticOut(t / d) * c;\\n}\\n\";\n\nvar ease_expo_in = \"float easeExpoIn(float p) {\\n    return pow(2.0, 10.0 * (p - 1.0));\\n}\\nfloat easeExpoIn(float t, float b, float c, float d) {\\n    return b + easeExpoIn(t / d) * c;\\n}\\n\";\n\nvar ease_expo_in_out = \"float easeExpoInOut(float p) {\\n    return ((p *= 2.0) < 1.0) ? 0.5 * pow(2.0, 10.0 * (p - 1.0)) : 0.5 * (2.0 - pow(2.0, -10.0 * (p - 1.0)));\\n}\\nfloat easeExpoInOut(float t, float b, float c, float d) {\\n    return b + easeExpoInOut(t / d) * c;\\n}\\n\";\n\nvar ease_expo_out = \"float easeExpoOut(float p) {\\n  return 1.0 - pow(2.0, -10.0 * p);\\n}\\nfloat easeExpoOut(float t, float b, float c, float d) {\\n  return b + easeExpoOut(t / d) * c;\\n}\\n\";\n\nvar ease_quad_in = \"float easeQuadIn(float t) {\\n    return t * t;\\n}\\nfloat easeQuadIn(float t, float b, float c, float d) {\\n  return b + easeQuadIn(t / d) * c;\\n}\\n\";\n\nvar ease_quad_in_out = \"float easeQuadInOut(float t) {\\n    float p = 2.0 * t * t;\\n    return t < 0.5 ? p : -p + (4.0 * t) - 1.0;\\n}\\nfloat easeQuadInOut(float t, float b, float c, float d) {\\n    return b + easeQuadInOut(t / d) * c;\\n}\\n\";\n\nvar ease_quad_out = \"float easeQuadOut(float t) {\\n  return -t * (t - 2.0);\\n}\\nfloat easeQuadOut(float t, float b, float c, float d) {\\n  return b + easeQuadOut(t / d) * c;\\n}\\n\";\n\nvar ease_quart_in = \"float easeQuartIn(float t) {\\n  return t * t * t * t;\\n}\\nfloat easeQuartIn(float t, float b, float c, float d) {\\n  return b + easeQuartIn(t / d) * c;\\n}\\n\";\n\nvar ease_quart_in_out = \"float easeQuartInOut(float t) {\\n    return t < 0.5 ? 8.0 * pow(t, 4.0) : -8.0 * pow(t - 1.0, 4.0) + 1.0;\\n}\\nfloat easeQuartInOut(float t, float b, float c, float d) {\\n    return b + easeQuartInOut(t / d) * c;\\n}\\n\";\n\nvar ease_quart_out = \"float easeQuartOut(float t) {\\n  return 1.0 - pow(1.0 - t, 4.0);\\n}\\nfloat easeQuartOut(float t, float b, float c, float d) {\\n  return b + easeQuartOut(t / d) * c;\\n}\\n\";\n\nvar ease_quint_in = \"float easeQuintIn(float t) {\\n    return pow(t, 5.0);\\n}\\nfloat easeQuintIn(float t, float b, float c, float d) {\\n    return b + easeQuintIn(t / d) * c;\\n}\\n\";\n\nvar ease_quint_in_out = \"float easeQuintInOut(float t) {\\n    return (t /= 0.5) < 1.0 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2.0) * t * t * t * t + 2.0);\\n}\\nfloat easeQuintInOut(float t, float b, float c, float d) {\\n    return b + easeQuintInOut(t / d) * c;\\n}\\n\";\n\nvar ease_quint_out = \"float easeQuintOut(float t) {\\n    return (t -= 1.0) * t * t * t * t + 1.0;\\n}\\nfloat easeQuintOut(float t, float b, float c, float d) {\\n    return b + easeQuintOut(t / d) * c;\\n}\\n\";\n\nvar ease_sine_in = \"float easeSineIn(float p) {\\n  return -cos(p * 1.57079632679) + 1.0;\\n}\\nfloat easeSineIn(float t, float b, float c, float d) {\\n  return b + easeSineIn(t / d) * c;\\n}\\n\";\n\nvar ease_sine_in_out = \"float easeSineInOut(float p) {\\n  return -0.5 * (cos(PI * p) - 1.0);\\n}\\nfloat easeSineInOut(float t, float b, float c, float d) {\\n  return b + easeSineInOut(t / d) * c;\\n}\\n\";\n\nvar ease_sine_out = \"float easeSineOut(float p) {\\n  return sin(p * 1.57079632679);\\n}\\nfloat easeSineOut(float t, float b, float c, float d) {\\n  return b + easeSineOut(t / d) * c;\\n}\\n\";\n\nvar quadratic_bezier = \"vec3 quadraticBezier(vec3 p0, vec3 c0, vec3 p1, float t) {\\n    float tn = 1.0 - t;\\n    return tn * tn * p0 + 2.0 * tn * t * c0 + t * t * p1;\\n}\\nvec2 quadraticBezier(vec2 p0, vec2 c0, vec2 p1, float t) {\\n    float tn = 1.0 - t;\\n    return tn * tn * p0 + 2.0 * tn * t * c0 + t * t * p1;\\n}\";\n\nvar quaternion_rotation = \"vec3 rotateVector(vec4 q, vec3 v) {\\n    return v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\\n}\\nvec4 quatFromAxisAngle(vec3 axis, float angle) {\\n    float halfAngle = angle * 0.5;\\n    return vec4(axis.xyz * sin(halfAngle), cos(halfAngle));\\n}\\n\";\n\nvar quaternion_slerp = \"vec4 quatSlerp(vec4 q0, vec4 q1, float t) {\\n    float s = 1.0 - t;\\n    float c = dot(q0, q1);\\n    float dir = -1.0;    float sqrSn = 1.0 - c * c;\\n    if (sqrSn > 2.220446049250313e-16) {\\n        float sn = sqrt(sqrSn);\\n        float len = atan(sn, c * dir);\\n        s = sin(s * len) / sn;\\n        t = sin(t * len) / sn;\\n    }\\n    float tDir = t * dir;\\n    return normalize(q0 * s + q1 * tDir);\\n}\\n\";\n\n// generated by scripts/build_shader_chunks.js\n\nvar ShaderChunk = {\n  catmull_rom_spline: catmull_rom_spline,\n  cubic_bezier: cubic_bezier,\n  ease_back_in: ease_back_in,\n  ease_back_in_out: ease_back_in_out,\n  ease_back_out: ease_back_out,\n  ease_bezier: ease_bezier,\n  ease_bounce_in: ease_bounce_in,\n  ease_bounce_in_out: ease_bounce_in_out,\n  ease_bounce_out: ease_bounce_out,\n  ease_circ_in: ease_circ_in,\n  ease_circ_in_out: ease_circ_in_out,\n  ease_circ_out: ease_circ_out,\n  ease_cubic_in: ease_cubic_in,\n  ease_cubic_in_out: ease_cubic_in_out,\n  ease_cubic_out: ease_cubic_out,\n  ease_elastic_in: ease_elastic_in,\n  ease_elastic_in_out: ease_elastic_in_out,\n  ease_elastic_out: ease_elastic_out,\n  ease_expo_in: ease_expo_in,\n  ease_expo_in_out: ease_expo_in_out,\n  ease_expo_out: ease_expo_out,\n  ease_quad_in: ease_quad_in,\n  ease_quad_in_out: ease_quad_in_out,\n  ease_quad_out: ease_quad_out,\n  ease_quart_in: ease_quart_in,\n  ease_quart_in_out: ease_quart_in_out,\n  ease_quart_out: ease_quart_out,\n  ease_quint_in: ease_quint_in,\n  ease_quint_in_out: ease_quint_in_out,\n  ease_quint_out: ease_quint_out,\n  ease_sine_in: ease_sine_in,\n  ease_sine_in_out: ease_sine_in_out,\n  ease_sine_out: ease_sine_out,\n  quadratic_bezier: quadratic_bezier,\n  quaternion_rotation: quaternion_rotation,\n  quaternion_slerp: quaternion_slerp\n\n};\n\n/**\n * A timeline transition segment. An instance of this class is created internally when calling {@link THREE.BAS.Timeline.add}, so you should not use this class directly.\n * The instance is also passed the the compiler function if you register a transition through {@link THREE.BAS.Timeline.register}. There you can use the public properties of the segment to compile the glsl string.\n * @param {string} key A string key generated by the timeline to which this segment belongs. Keys are unique.\n * @param {number} start Start time of this segment in a timeline in seconds.\n * @param {number} duration Duration of this segment in seconds.\n * @param {object} transition Object describing the transition.\n * @param {function} compiler A reference to the compiler function from a transition definition.\n * @constructor\n */\nfunction TimelineSegment(key, start, duration, transition, compiler) {\n  this.key = key;\n  this.start = start;\n  this.duration = duration;\n  this.transition = transition;\n  this.compiler = compiler;\n\n  this.trail = 0;\n}\n\nTimelineSegment.prototype.compile = function () {\n  return this.compiler(this);\n};\n\nObject.defineProperty(TimelineSegment.prototype, 'end', {\n  get: function get() {\n    return this.start + this.duration;\n  }\n});\n\n/**\n * A utility class to create an animation timeline which can be baked into a (vertex) shader.\n * By default the timeline supports translation, scale and rotation. This can be extended or overridden.\n * @constructor\n */\nfunction Timeline() {\n  /**\n   * The total duration of the timeline in seconds.\n   * @type {number}\n   */\n  this.duration = 0;\n\n  /**\n   * The name of the value that segments will use to read the time. Defaults to 'tTime'.\n   * @type {string}\n   */\n  this.timeKey = 'tTime';\n\n  this.segments = {};\n  this.__key = 0;\n}\n\n// static definitions map\nTimeline.segmentDefinitions = {};\n\n/**\n * Registers a transition definition for use with {@link THREE.BAS.Timeline.add}.\n * @param {String} key Name of the transition. Defaults include 'scale', 'rotate' and 'translate'.\n * @param {Object} definition\n * @param {Function} definition.compiler A function that generates a glsl string for a transition segment. Accepts a THREE.BAS.TimelineSegment as the sole argument.\n * @param {*} definition.defaultFrom The initial value for a transform.from. For example, the defaultFrom for a translation is THREE.Vector3(0, 0, 0).\n * @static\n */\nTimeline.register = function (key, definition) {\n  Timeline.segmentDefinitions[key] = definition;\n\n  return definition;\n};\n\n/**\n * Add a transition to the timeline.\n * @param {number} duration Duration in seconds\n * @param {object} transitions An object containing one or several transitions. The keys should match transform definitions.\n * The transition object for each key will be passed to the matching definition's compiler. It can have arbitrary properties, but the Timeline expects at least a 'to', 'from' and an optional 'ease'.\n * @param {number|string} [positionOffset] Position in the timeline. Defaults to the end of the timeline. If a number is provided, the transition will be inserted at that time in seconds. Strings ('+=x' or '-=x') can be used for a value relative to the end of timeline.\n */\nTimeline.prototype.add = function (duration, transitions, positionOffset) {\n  // stop rollup from complaining about eval\n  var _eval = eval;\n\n  var start = this.duration;\n\n  if (positionOffset !== undefined) {\n    if (typeof positionOffset === 'number') {\n      start = positionOffset;\n    } else if (typeof positionOffset === 'string') {\n      _eval('start' + positionOffset);\n    }\n\n    this.duration = Math.max(this.duration, start + duration);\n  } else {\n    this.duration += duration;\n  }\n\n  var keys = Object.keys(transitions),\n      key = void 0;\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n\n    this.processTransition(key, transitions[key], start, duration);\n  }\n};\n\nTimeline.prototype.processTransition = function (key, transition, start, duration) {\n  var definition = Timeline.segmentDefinitions[key];\n\n  var segments = this.segments[key];\n  if (!segments) segments = this.segments[key] = [];\n\n  if (transition.from === undefined) {\n    if (segments.length === 0) {\n      transition.from = definition.defaultFrom;\n    } else {\n      transition.from = segments[segments.length - 1].transition.to;\n    }\n  }\n\n  segments.push(new TimelineSegment((this.__key++).toString(), start, duration, transition, definition.compiler));\n};\n\n/**\n * Compiles the timeline into a glsl string array that can be injected into a (vertex) shader.\n * @returns {Array}\n */\nTimeline.prototype.compile = function () {\n  var c = [];\n\n  var keys = Object.keys(this.segments);\n  var segments = void 0;\n\n  for (var i = 0; i < keys.length; i++) {\n    segments = this.segments[keys[i]];\n\n    this.fillGaps(segments);\n\n    segments.forEach(function (s) {\n      c.push(s.compile());\n    });\n  }\n\n  return c;\n};\nTimeline.prototype.fillGaps = function (segments) {\n  if (segments.length === 0) return;\n\n  var s0 = void 0,\n      s1 = void 0;\n\n  for (var i = 0; i < segments.length - 1; i++) {\n    s0 = segments[i];\n    s1 = segments[i + 1];\n\n    s0.trail = s1.start - s0.end;\n  }\n\n  // pad last segment until end of timeline\n  s0 = segments[segments.length - 1];\n  s0.trail = this.duration - s0.end;\n};\n\n/**\n * Get a compiled glsl string with calls to transform functions for a given key.\n * The order in which these transitions are applied matters because they all operate on the same value.\n * @param {string} key A key matching a transform definition.\n * @returns {string}\n */\nTimeline.prototype.getTransformCalls = function (key) {\n  var t = this.timeKey;\n\n  return this.segments[key] ? this.segments[key].map(function (s) {\n    return 'applyTransform' + s.key + '(' + t + ', transformed);';\n  }).join('\\n') : '';\n};\n\nvar TimelineChunks = {\n  vec3: function vec3(n, v, p) {\n    var x = (v.x || 0).toPrecision(p);\n    var y = (v.y || 0).toPrecision(p);\n    var z = (v.z || 0).toPrecision(p);\n\n    return \"vec3 \" + n + \" = vec3(\" + x + \", \" + y + \", \" + z + \");\";\n  },\n  vec4: function vec4(n, v, p) {\n    var x = (v.x || 0).toPrecision(p);\n    var y = (v.y || 0).toPrecision(p);\n    var z = (v.z || 0).toPrecision(p);\n    var w = (v.w || 0).toPrecision(p);\n\n    return \"vec4 \" + n + \" = vec4(\" + x + \", \" + y + \", \" + z + \", \" + w + \");\";\n  },\n  delayDuration: function delayDuration(segment) {\n    return \"\\n    float cDelay\" + segment.key + \" = \" + segment.start.toPrecision(4) + \";\\n    float cDuration\" + segment.key + \" = \" + segment.duration.toPrecision(4) + \";\\n    \";\n  },\n  progress: function progress(segment) {\n    // zero duration segments should always render complete\n    if (segment.duration === 0) {\n      return \"float progress = 1.0;\";\n    } else {\n      return \"\\n      float progress = clamp(time - cDelay\" + segment.key + \", 0.0, cDuration\" + segment.key + \") / cDuration\" + segment.key + \";\\n      \" + (segment.transition.ease ? \"progress = \" + segment.transition.ease + \"(progress\" + (segment.transition.easeParams ? \", \" + segment.transition.easeParams.map(function (v) {\n        return v.toPrecision(4);\n      }).join(\", \") : \"\") + \");\" : \"\") + \"\\n      \";\n    }\n  },\n  renderCheck: function renderCheck(segment) {\n    var startTime = segment.start.toPrecision(4);\n    var endTime = (segment.end + segment.trail).toPrecision(4);\n\n    return \"if (time < \" + startTime + \" || time > \" + endTime + \") return;\";\n  }\n};\n\nvar TranslationSegment = {\n  compiler: function compiler(segment) {\n    return '\\n    ' + TimelineChunks.delayDuration(segment) + '\\n    ' + TimelineChunks.vec3('cTranslateFrom' + segment.key, segment.transition.from, 2) + '\\n    ' + TimelineChunks.vec3('cTranslateTo' + segment.key, segment.transition.to, 2) + '\\n    \\n    void applyTransform' + segment.key + '(float time, inout vec3 v) {\\n    \\n      ' + TimelineChunks.renderCheck(segment) + '\\n      ' + TimelineChunks.progress(segment) + '\\n    \\n      v += mix(cTranslateFrom' + segment.key + ', cTranslateTo' + segment.key + ', progress);\\n    }\\n    ';\n  },\n  defaultFrom: new Vector3(0, 0, 0)\n};\n\nTimeline.register('translate', TranslationSegment);\n\nvar ScaleSegment = {\n  compiler: function compiler(segment) {\n    var origin = segment.transition.origin;\n\n    return '\\n    ' + TimelineChunks.delayDuration(segment) + '\\n    ' + TimelineChunks.vec3('cScaleFrom' + segment.key, segment.transition.from, 2) + '\\n    ' + TimelineChunks.vec3('cScaleTo' + segment.key, segment.transition.to, 2) + '\\n    ' + (origin ? TimelineChunks.vec3('cOrigin' + segment.key, origin, 2) : '') + '\\n    \\n    void applyTransform' + segment.key + '(float time, inout vec3 v) {\\n    \\n      ' + TimelineChunks.renderCheck(segment) + '\\n      ' + TimelineChunks.progress(segment) + '\\n    \\n      ' + (origin ? 'v -= cOrigin' + segment.key + ';' : '') + '\\n      v *= mix(cScaleFrom' + segment.key + ', cScaleTo' + segment.key + ', progress);\\n      ' + (origin ? 'v += cOrigin' + segment.key + ';' : '') + '\\n    }\\n    ';\n  },\n  defaultFrom: new Vector3(1, 1, 1)\n};\n\nTimeline.register('scale', ScaleSegment);\n\nvar RotationSegment = {\n  compiler: function compiler(segment) {\n    var fromAxisAngle = new Vector4(segment.transition.from.axis.x, segment.transition.from.axis.y, segment.transition.from.axis.z, segment.transition.from.angle);\n\n    var toAxis = segment.transition.to.axis || segment.transition.from.axis;\n    var toAxisAngle = new Vector4(toAxis.x, toAxis.y, toAxis.z, segment.transition.to.angle);\n\n    var origin = segment.transition.origin;\n\n    return '\\n    ' + TimelineChunks.delayDuration(segment) + '\\n    ' + TimelineChunks.vec4('cRotationFrom' + segment.key, fromAxisAngle, 8) + '\\n    ' + TimelineChunks.vec4('cRotationTo' + segment.key, toAxisAngle, 8) + '\\n    ' + (origin ? TimelineChunks.vec3('cOrigin' + segment.key, origin, 2) : '') + '\\n    \\n    void applyTransform' + segment.key + '(float time, inout vec3 v) {\\n      ' + TimelineChunks.renderCheck(segment) + '\\n      ' + TimelineChunks.progress(segment) + '\\n\\n      ' + (origin ? 'v -= cOrigin' + segment.key + ';' : '') + '\\n      vec3 axis = normalize(mix(cRotationFrom' + segment.key + '.xyz, cRotationTo' + segment.key + '.xyz, progress));\\n      float angle = mix(cRotationFrom' + segment.key + '.w, cRotationTo' + segment.key + '.w, progress);\\n      vec4 q = quatFromAxisAngle(axis, angle);\\n      v = rotateVector(q, v);\\n      ' + (origin ? 'v += cOrigin' + segment.key + ';' : '') + '\\n    }\\n    ';\n  },\n\n  defaultFrom: { axis: new Vector3(), angle: 0 }\n};\n\nTimeline.register('rotate', RotationSegment);\n\nexport { BasicAnimationMaterial, LambertAnimationMaterial, PhongAnimationMaterial, StandardAnimationMaterial, ToonAnimationMaterial, PointsAnimationMaterial, DepthAnimationMaterial, DistanceAnimationMaterial, PrefabBufferGeometry, MultiPrefabBufferGeometry, InstancedPrefabBufferGeometry, ModelBufferGeometry, PointBufferGeometry, ShaderChunk, Timeline, TimelineSegment, TimelineChunks, TranslationSegment, ScaleSegment, RotationSegment, Utils };","import THREE from '../libs/three.extensions';\nimport * as BAS from '../libs/bas';\n\nexport default class AnimationMesh extends THREE.Mesh {\n  get time() {\n    return this.material.uniforms['uTime'].value;\n  }\n  set time(v) {\n    this.material.uniforms['uTime'].value = v;\n  }\n\n  constructor(shaderOptions, prefabGeometry) {\n    //var prefabGeometry = new THREE.TetrahedronGeometry(1.0);\n\n    // the number of times the prefabGeometry will be repeated\n    const animationPhase = 'in';\n\n    var box = new THREE.Box3().setFromObject(new THREE.Mesh(prefabGeometry, new THREE.MeshNormalMaterial()));\n    var width = box.getSize().x + 100;\n    var height = box.getSize().y;\n\n    /* prefabGeometry.computeBoundingBox();\n    const { min, max } = prefabGeometry.boundingBox;\n\n    var width = max.x - min.x + 100;\n    var height = max.z - min.z;\n    console.log(max, min); */\n\n    // duplicate some vertices so that each face becomes a separate triangle.\n    // this is the same as the THREE.ExplodeModifier\n    BAS.Utils.separateFaces(prefabGeometry);\n\n    // create a ModelBufferGeometry based on the geometry created above\n    // ModelBufferGeometry makes it easier to create animations based on faces of a geometry\n    // it is similar to the PrefabBufferGeometry where the prefab is a face (triangle)\n    var geometry = new BAS.ModelBufferGeometry(prefabGeometry, {\n      // setting this to true will store the vertex positions relative to the face they are in\n      // this way it's easier to rotate and scale faces around their own center\n      localizeFaces: true,\n      // setting this to true will store a centroid for each face in an array\n      computeCentroids: true\n    });\n\n\n\n    // buffer UVs so the textures are mapped correctly\n    geometry.bufferUvs();\n\n    var i, j, offset, centroid;\n\n    // ANIMATION\n\n    var aDelayDuration = geometry.createAttribute('aDelayDuration', 2);\n    // these will be used to calculate the animation delay and duration for each face\n    var minDuration = 0.8;\n    var maxDuration = 1.2;\n    var maxDelayX = 0.9;\n    var maxDelayY = 0.125;\n    var stretch = 0.11;\n\n    const totalDuration = maxDuration + maxDelayX + maxDelayY + stretch;\n\n    for (i = 0, offset = 0; i < geometry.faceCount; i++) {\n      centroid = geometry.centroids[i];\n\n      var duration = THREE.Math.randFloat(minDuration, maxDuration);\n      // delay is based on the position of each face within the original plane geometry\n      // because the faces are localized, this position is available in the centroids array\n      var delayX = THREE.Math.mapLinear(centroid.x, -width * 0.5, width * 0.5, 0.0, maxDelayX);\n      var delayY;\n\n      // create a different delayY mapping based on the animation phase (in or out)\n      if (animationPhase === 'in') {\n        delayY = THREE.Math.mapLinear(Math.abs(centroid.y), 0, height * 0.5, 0.0, maxDelayY)\n      }\n      else {\n        delayY = THREE.Math.mapLinear(Math.abs(centroid.y), 0, height * 0.5, maxDelayY, 0.0)\n      }\n\n      // store the delay and duration FOR EACH VERTEX of the face\n      for (j = 0; j < 3; j++) {\n        // by giving each VERTEX a different delay value the face will be 'stretched' in time\n        aDelayDuration.array[offset] = delayX + delayY + (Math.random() * stretch * duration);\n        aDelayDuration.array[offset + 1] = duration;\n\n        offset += 2;\n      }\n    }\n\n    // POSITIONS\n\n    // the transitions will begin and end on the same position\n    geometry.createAttribute('aStartPosition', 3, function (data, i) {\n      geometry.centroids[i].toArray(data);\n    });\n    geometry.createAttribute('aEndPosition', 3, function (data, i) {\n      geometry.centroids[i].toArray(data);\n    });\n\n    // CONTROL POINTS\n\n    // each face will follow a bezier path\n    // since all paths begin and end on the position (the centroid), the control points will determine how the animation looks\n    var aControl0 = geometry.createAttribute('aControl0', 3);\n    var aControl1 = geometry.createAttribute('aControl1', 3);\n\n    var control0 = new THREE.Vector3();\n    var control1 = new THREE.Vector3();\n    var data = [];\n\n    for (i = 0, offset = 0; i < geometry.faceCount; i++) {\n      centroid = geometry.centroids[i];\n\n      // the logic to determine the control points is completely arbitrary\n      var signY = Math.sign(centroid.y);\n\n      control0.x = THREE.Math.randFloat(0.1, 0.3) * -10;\n      control0.y = signY * THREE.Math.randFloat(0.1, 0.3) * 0;\n      control0.z = THREE.Math.randFloatSpread(50);\n\n      control1.x = THREE.Math.randFloat(0.3, 0.6) * -10;\n      control1.y = -signY * THREE.Math.randFloat(0.3, 0.6) * 0;\n      control1.z = THREE.Math.randFloatSpread(-50);\n\n      if (animationPhase === 'in') {\n        control0.subVectors(centroid, control0);\n        control1.subVectors(centroid, control1);\n      }\n      else { // out\n        control0.addVectors(centroid, control0);\n        control1.addVectors(centroid, control1);\n      }\n\n      // store the control points per face\n      // this is similar to THREE.PrefabBufferGeometry.setPrefabData\n      geometry.setFaceData(aControl0, i, control0.toArray(data));\n      geometry.setFaceData(aControl1, i, control1.toArray(data));\n    }\n\n    var texture = new THREE.Texture();\n    texture.minFilter = THREE.NearestFilter;\n    // BAS.StandardAnimationMaterial uses the data in the buffer geometry to calculate the animation state\n    // this calculation is performed in the vertex shader\n    // BAS.StandardAnimationMaterial uses THREE.js shader chunks to duplicate the THREE.MeshStandardMaterial\n    // the shader is then 'extended' by injecting our own chunks at specific points\n    // BAS also extends THREE.MeshPhongMaterial and THREE.MeshBasicMaterial in the same way\n    var material = new BAS.StandardAnimationMaterial({\n      // material parameters/flags go here\n      flatShading: true,\n      transparent: true,\n      // custom uniform definitions\n      uniforms: {\n        // uTime is updated every frame, and is used to calculate the current animation state\n        // this is the only value that changes, which is the reason we can animate so many objects at the same time\n        uTime: { value: 0 },\n        needSplash: 1,\n        textureImage: null,\n      },\n      // uniform *values* of the material we are extending go here\n      uniformValues: {\n        map: texture,\n        needSplash: 1,\n        textureImage: new THREE.TextureLoader().load('logo.svg'),\n        canvasResolution: {\n          x: window.innerWidth,\n          y: window.innerHeight,\n        },\n        metalness: 0.5,\n        roughness: 0.5\n      },\n      ...shaderOptions,\n    });\n\n    /* material = new THREE.MeshBasicMaterial({\n      color: 0xffffff,\n      transparent: true\n    }) */\n\n    super(geometry, material);\n\n    this.totalDuration = totalDuration;\n    // it's usually a good idea to set frustum culling to false because\n    // the bounding box does not reflect the dimensions of the whole object in the scene\n    this.frustumCulled = false;\n  }\n}","import { TimelineMax, Power0 } from 'gsap';\nimport THREE from '../libs/three.extensions';\nimport THREERoot from '../libs/root';\nimport AnimationMesh from './animation.mesh';\n\nexport default class Main {\n  constructor(shaderOptions = {}) {\n    const root = new THREERoot({\n      fov: 80,\n      createCameraControls: false,\n    });\n    root.renderer.setClearColor('black');\n    root.camera.position.set(0, 0, 30);\n\n    /* var light = new THREE.DirectionalLight();\n    light.position.set(0, 0, 3); */\n    var light = new THREE.AmbientLight(0xffffff, 4);\n    root.scene.add(light);\n\n    this.root = root;\n    this.shaderOptions = shaderOptions;\n  }\n\n  addAnimationMesh(prefabGeometry) {\n    // Animation extends THREE.Mesh\n    const animationMesh = new AnimationMesh(this.shaderOptions, prefabGeometry);\n    this.root.add(animationMesh);\n\n    const duration = 7.0;\n    const tl = new TimelineMax({\n      repeat: 0,\n    });\n    /* tl.to(animationMesh, duration, {\n      time: animationMesh.totalDuration,\n      ease: Power0.easeIn\n    }, 0); */\n\n    tl\n      .to(animationMesh, duration, {\n        time: animationMesh.totalDuration,\n        repeat: 0, yoyo: true,\n        ease: Power0.easeIn,\n        onComplete(){\n          /* tl.fromTo(animationMesh, duration, {\n            time: animationMesh.totalDuration * 1,\n          }, {\n            time: animationMesh.totalDuration * .75,\n            repeat: -1, yoyo: true,\n            ease: Power0.easeIn\n          }); */\n        }\n      })\n      /* .fromTo(animationMesh, duration, {\n        time: animationMesh.totalDuration * 1,\n      }, {\n        time: animationMesh.totalDuration * .50,\n        repeat: -1, yoyo: true,\n        ease: Power0.easeIn\n      }) */;\n\n\n    /* var totalTime = 10;\n    tl.to(explosionAnimation, duration, {\n      time: explosionAnimation.totalDuration,\n      ease: Power0.easeIn\n    }, 0); */\n    /* tl.add(TweenMax.fromTo(animationMesh, totalTime, { time: 0.0 }, { time: duration, ease: Power0.easeInOut }), 0);\n    tl.add(TweenMax.fromTo(animationMesh.rotation, totalTime - duration, { x: 0.0 }, { x: 360 / 180 * Math.PI, ease: Power0.easeInOut }), duration);\n    tl.add(TweenMax.fromTo(animationMesh, totalTime, { time: duration }, { time: 0.0, ease: Power0.easeInOut }), totalTime - 1);\n    tl.add(function () { animationMesh.material.uniforms['needSplash'].value = 0; }, totalTime * 2 - 3)\n    tl.add(TweenMax.fromTo(animationMesh, 3, { time: 0.0 }, { time: duration, ease: Power0.easeInOut }), totalTime * 2 - 3); */\n  }\n}","import * as BAS from '../libs/bas';\nexport const AnimationOptions = {\n    // BAS has a number of functions that can be reused. They can be injected here.\n    vertexFunctions: [\n        // Penner easing functions easeCubicInOut and easeQuadOut (see the easing example for all available functions)\n        BAS.ShaderChunk['ease_cubic_in_out'],\n        BAS.ShaderChunk['ease_quad_out'],\n        BAS.ShaderChunk['ease_back_in'],\n        BAS.ShaderChunk['ease_elastic_in_out'],\n        // quatFromAxisAngle and rotateVector functions\n        BAS.ShaderChunk['quaternion_rotation'],\n        BAS.ShaderChunk['cubic_bezier'],\n        BAS.ShaderChunk['ease_out_cubic']\n\n\n\n\n        /* `\n            float easeCubicInOut(float t) {\\n  return (t /= 0.5) < 1.0 ? 0.5 * t * t * t : 0.5 * ((t-=2.0) * t * t + 2.0);\\n}\n         */\n    ],\n    // parameter  must match uniforms and attributes defined above in both name and type\n    // as a convention, I prefix uniforms with 'u' and attributes with 'a' (and constants with 'c', varyings with 'v', and temps with 't')\n    vertexParameters: [\n        'uniform float uTime;',\n        'uniform vec3 midPoint;',\n        'uniform float needSplash;',\n        'attribute vec2 aDelayDuration;',\n        'attribute vec3 aStartPosition;',\n        'attribute vec3 aEndPosition;',\n        'attribute vec4 aAxisAngle;',\n        'attribute vec3 aControl0;',\n        'attribute vec3 aControl1;',\n    ],\n    // this chunk is injected 1st thing in the vertex shader main() function\n    // variables declared here are available in all subsequent chunks\n    vertexInit: [\n        'float tProgress = clamp(uTime - aDelayDuration.x, 0.0, aDelayDuration.y) / aDelayDuration.y;',\n    ],\n    // this chunk is injected before all default position calculations (including the model matrix multiplication)\n    vertexPosition: [\n        //(true ? 'transformed *= tProgress;' : 'transformed *= 1.0 - tProgress;'),\n        'transformed *= tProgress;',\n        //'transformed *= 1.0 - tProgress;',\n        // translation based on the bezier curve defined by the attributes\n        'transformed += cubicBezier(aStartPosition, aControl0, aControl1, aEndPosition, tProgress);',\n\n    ],\n    fragmentParameters: [\n        'vec3 vecDataF;',\n        'vec3 aStartPositionF;',\n        'uniform sampler2D textureImage;',\n    ],\n    fragmentMap: [\n        'diffuseColor = texture2D(textureImage, vUv);'\n    ]\n};","<template>\n  <div id=\"app\"></div>\n</template>\n\n<style>\nhtml,\nbody {\n  width: 100%;\n  height: 100%;\n  margin: 0;\n}\ncanvas {\n  width: 100% !important;\n  height: 100% !important;\n}\n</style>\n\n\n<script>\nimport THREE from \"./libs/three.extensions\";\nimport Main from \"./js/index.js\";\nimport { AnimationOptions } from \"./js/animation.options\";\n\nconst cSize=5;\nconst main = new Main(AnimationOptions);\nmain.addAnimationMesh(new THREE.PlaneGeometry(cSize*8.571428571428571, cSize, 300, 300));\n\nexport default {};\n</script>","import mod from \"-!../../usr/local/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js??ref--12-0!../../usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../usr/local/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js??ref--12-0!../../usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=525bc1c5&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../usr/local/lib/node_modules/@vue/cli-service-global/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../usr/local/lib/node_modules/@vue/cli-service-global/node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../usr/local/lib/node_modules/@vue/cli-service-global/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../usr/local/lib/node_modules/@vue/cli-service-global/node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}